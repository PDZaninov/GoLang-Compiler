     0  *ast.File {
     1  .  Package: 1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: 3:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  Kind: func
    13  .  .  .  .  .  Name: "main"
    14  .  .  .  .  .  Decl: *(obj @ 7)
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  Func: 3:1
    19  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  Opening: 3:10
    21  .  .  .  .  .  Closing: 3:11
    22  .  .  .  .  }
    23  .  .  .  }
    24  .  .  .  Body: *ast.BlockStmt {
    25  .  .  .  .  Lbrace: 3:13
    26  .  .  .  .  List: []ast.Stmt (len = 6) {
    27  .  .  .  .  .  0: *ast.DeclStmt {
    28  .  .  .  .  .  .  Decl: *ast.GenDecl {
    29  .  .  .  .  .  .  .  TokPos: 4:9
    30  .  .  .  .  .  .  .  Tok: var
    31  .  .  .  .  .  .  .  Lparen: -
    32  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    33  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    34  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    35  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    36  .  .  .  .  .  .  .  .  .  .  .  NamePos: 4:13
    37  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
    38  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    39  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    40  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
    41  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 33)
    42  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    43  .  .  .  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    47  .  .  .  .  .  .  .  .  .  .  NamePos: 4:15
    48  .  .  .  .  .  .  .  .  .  .  Name: "int"
    49  .  .  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    51  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    52  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 4:21
    53  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
    54  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
    55  .  .  .  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  Rparen: -
    60  .  .  .  .  .  .  }
    61  .  .  .  .  .  }
    62  .  .  .  .  .  1: *ast.DeclStmt {
    63  .  .  .  .  .  .  Decl: *ast.GenDecl {
    64  .  .  .  .  .  .  .  TokPos: 5:9
    65  .  .  .  .  .  .  .  Tok: var
    66  .  .  .  .  .  .  .  Lparen: -
    67  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    68  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    69  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    70  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    71  .  .  .  .  .  .  .  .  .  .  .  NamePos: 5:13
    72  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
    73  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    74  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    75  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
    76  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 68)
    77  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    78  .  .  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    82  .  .  .  .  .  .  .  .  .  .  NamePos: 5:15
    83  .  .  .  .  .  .  .  .  .  .  Name: "int"
    84  .  .  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    86  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    87  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 5:21
    88  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
    89  .  .  .  .  .  .  .  .  .  .  .  Value: "7"
    90  .  .  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  .  .  }
    92  .  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  Rparen: -
    95  .  .  .  .  .  .  }
    96  .  .  .  .  .  }
    97  .  .  .  .  .  2: *ast.ForStmt {
    98  .  .  .  .  .  .  For: 6:2
    99  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   100  .  .  .  .  .  .  .  X: *ast.Ident {
   101  .  .  .  .  .  .  .  .  NamePos: 6:6
   102  .  .  .  .  .  .  .  .  Name: "i"
   103  .  .  .  .  .  .  .  .  Obj: *(obj @ 38)
   104  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  .  OpPos: 6:8
   106  .  .  .  .  .  .  .  Op: <=
   107  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   108  .  .  .  .  .  .  .  .  ValuePos: 6:11
   109  .  .  .  .  .  .  .  .  Kind: INT
   110  .  .  .  .  .  .  .  .  Value: "3"
   111  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  Body: *ast.BlockStmt {
   114  .  .  .  .  .  .  .  Lbrace: 6:13
   115  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   116  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   117  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   118  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   119  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   120  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:13
   121  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   122  .  .  .  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   124  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:17
   125  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   126  .  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  .  Lparen: 7:24
   129  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   130  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   131  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:25
   132  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   133  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 38)
   134  .  .  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   137  .  .  .  .  .  .  .  .  .  .  Rparen: 7:26
   138  .  .  .  .  .  .  .  .  .  }
   139  .  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  .  .  1: *ast.AssignStmt {
   141  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   142  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   143  .  .  .  .  .  .  .  .  .  .  .  NamePos: 8:13
   144  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   145  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 38)
   146  .  .  .  .  .  .  .  .  .  .  }
   147  .  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  .  TokPos: 8:15
   149  .  .  .  .  .  .  .  .  .  Tok: =
   150  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   151  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   152  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   153  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 8:17
   154  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   155  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 38)
   156  .  .  .  .  .  .  .  .  .  .  .  }
   157  .  .  .  .  .  .  .  .  .  .  .  OpPos: 8:19
   158  .  .  .  .  .  .  .  .  .  .  .  Op: +
   159  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   160  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 8:21
   161  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   162  .  .  .  .  .  .  .  .  .  .  .  .  Value: "1"
   163  .  .  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  .  .  }
   167  .  .  .  .  .  .  .  }
   168  .  .  .  .  .  .  .  Rbrace: 9:9
   169  .  .  .  .  .  .  }
   170  .  .  .  .  .  }
   171  .  .  .  .  .  3: *ast.ForStmt {
   172  .  .  .  .  .  .  For: 11:9
   173  .  .  .  .  .  .  Init: *ast.ExprStmt {
   174  .  .  .  .  .  .  .  X: *ast.Ident {
   175  .  .  .  .  .  .  .  .  NamePos: 11:13
   176  .  .  .  .  .  .  .  .  Name: "j"
   177  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   178  .  .  .  .  .  .  .  }
   179  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   181  .  .  .  .  .  .  .  X: *ast.Ident {
   182  .  .  .  .  .  .  .  .  NamePos: 11:17
   183  .  .  .  .  .  .  .  .  Name: "j"
   184  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   185  .  .  .  .  .  .  .  }
   186  .  .  .  .  .  .  .  OpPos: 11:19
   187  .  .  .  .  .  .  .  Op: <
   188  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   189  .  .  .  .  .  .  .  .  ValuePos: 11:21
   190  .  .  .  .  .  .  .  .  Kind: INT
   191  .  .  .  .  .  .  .  .  Value: "10"
   192  .  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  }
   194  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   195  .  .  .  .  .  .  .  X: *ast.Ident {
   196  .  .  .  .  .  .  .  .  NamePos: 11:25
   197  .  .  .  .  .  .  .  .  Name: "j"
   198  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   199  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  .  TokPos: 11:26
   201  .  .  .  .  .  .  .  Tok: ++
   202  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  Body: *ast.BlockStmt {
   204  .  .  .  .  .  .  .  Lbrace: 11:29
   205  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   206  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   207  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   208  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   209  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:13
   210  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
   211  .  .  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  .  .  .  Lparen: 12:20
   213  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   214  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   215  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:21
   216  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   217  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   218  .  .  .  .  .  .  .  .  .  .  .  }
   219  .  .  .  .  .  .  .  .  .  .  }
   220  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   221  .  .  .  .  .  .  .  .  .  .  Rparen: 12:22
   222  .  .  .  .  .  .  .  .  .  }
   223  .  .  .  .  .  .  .  .  }
   224  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  Rbrace: 13:9
   226  .  .  .  .  .  .  }
   227  .  .  .  .  .  }
   228  .  .  .  .  .  4: *ast.ForStmt {
   229  .  .  .  .  .  .  For: 15:9
   230  .  .  .  .  .  .  Init: *ast.ExprStmt {
   231  .  .  .  .  .  .  .  X: *ast.Ident {
   232  .  .  .  .  .  .  .  .  NamePos: 15:13
   233  .  .  .  .  .  .  .  .  Name: "j"
   234  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   235  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   238  .  .  .  .  .  .  .  X: *ast.Ident {
   239  .  .  .  .  .  .  .  .  NamePos: 15:17
   240  .  .  .  .  .  .  .  .  Name: "j"
   241  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   242  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  OpPos: 15:19
   244  .  .  .  .  .  .  .  Op: >
   245  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   246  .  .  .  .  .  .  .  .  ValuePos: 15:21
   247  .  .  .  .  .  .  .  .  Kind: INT
   248  .  .  .  .  .  .  .  .  Value: "6"
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  }
   251  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   252  .  .  .  .  .  .  .  X: *ast.Ident {
   253  .  .  .  .  .  .  .  .  NamePos: 15:24
   254  .  .  .  .  .  .  .  .  Name: "j"
   255  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   256  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  TokPos: 15:25
   258  .  .  .  .  .  .  .  Tok: --
   259  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  Body: *ast.BlockStmt {
   261  .  .  .  .  .  .  .  Lbrace: 15:28
   262  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   263  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   264  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   265  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   266  .  .  .  .  .  .  .  .  .  .  .  NamePos: 16:13
   267  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
   268  .  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  .  Lparen: 16:20
   270  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   271  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   272  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 16:21
   273  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   274  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   275  .  .  .  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  .  .  .  }
   277  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   278  .  .  .  .  .  .  .  .  .  .  Rparen: 16:22
   279  .  .  .  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  .  .  }
   281  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  Rbrace: 17:9
   283  .  .  .  .  .  .  }
   284  .  .  .  .  .  }
   285  .  .  .  .  .  5: *ast.ForStmt {
   286  .  .  .  .  .  .  For: 19:9
   287  .  .  .  .  .  .  Body: *ast.BlockStmt {
   288  .  .  .  .  .  .  .  Lbrace: 19:13
   289  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   290  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   291  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   292  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   293  .  .  .  .  .  .  .  .  .  .  .  NamePos: 20:13
   294  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
   295  .  .  .  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  .  .  .  .  Lparen: 20:20
   297  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   298  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   299  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 20:21
   300  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   301  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"loop\""
   302  .  .  .  .  .  .  .  .  .  .  .  }
   303  .  .  .  .  .  .  .  .  .  .  }
   304  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   305  .  .  .  .  .  .  .  .  .  .  Rparen: 20:27
   306  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  .  1: *ast.BranchStmt {
   309  .  .  .  .  .  .  .  .  .  TokPos: 21:13
   310  .  .  .  .  .  .  .  .  .  Tok: break
   311  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  }
   313  .  .  .  .  .  .  .  Rbrace: 22:9
   314  .  .  .  .  .  .  }
   315  .  .  .  .  .  }
   316  .  .  .  .  }
   317  .  .  .  .  Rbrace: 23:1
   318  .  .  .  }
   319  .  .  }
   320  .  }
   321  .  Scope: *ast.Scope {
   322  .  .  Objects: map[string]*ast.Object (len = 1) {
   323  .  .  .  "main": *(obj @ 11)
   324  .  .  }
   325  .  }
   326  .  Unresolved: []*ast.Ident (len = 6) {
   327  .  .  0: *(obj @ 46)
   328  .  .  1: *(obj @ 81)
   329  .  .  2: *(obj @ 119)
   330  .  .  3: *(obj @ 208)
   331  .  .  4: *(obj @ 265)
   332  .  .  5: *(obj @ 292)
   333  .  }
   334  }