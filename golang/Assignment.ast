     0  *ast.File {
     1  .  Package: Assignment.go:1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: Assignment.go:1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 3) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: Assignment.go:3:6
    10  .  .  .  .  Name: "vals"
    11  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  Kind: func
    13  .  .  .  .  .  Name: "vals"
    14  .  .  .  .  .  Decl: *(obj @ 7)
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  Func: Assignment.go:3:1
    19  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  Opening: Assignment.go:3:10
    21  .  .  .  .  .  Closing: Assignment.go:3:11
    22  .  .  .  .  }
    23  .  .  .  .  Results: *ast.FieldList {
    24  .  .  .  .  .  Opening: Assignment.go:3:13
    25  .  .  .  .  .  List: []*ast.Field (len = 2) {
    26  .  .  .  .  .  .  0: *ast.Field {
    27  .  .  .  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  .  .  .  NamePos: Assignment.go:3:14
    29  .  .  .  .  .  .  .  .  Name: "int"
    30  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  }
    32  .  .  .  .  .  .  1: *ast.Field {
    33  .  .  .  .  .  .  .  Type: *ast.Ident {
    34  .  .  .  .  .  .  .  .  NamePos: Assignment.go:3:18
    35  .  .  .  .  .  .  .  .  Name: "int"
    36  .  .  .  .  .  .  .  }
    37  .  .  .  .  .  .  }
    38  .  .  .  .  .  }
    39  .  .  .  .  .  Closing: Assignment.go:3:21
    40  .  .  .  .  }
    41  .  .  .  }
    42  .  .  .  Body: *ast.BlockStmt {
    43  .  .  .  .  Lbrace: Assignment.go:3:22
    44  .  .  .  .  List: []ast.Stmt (len = 1) {
    45  .  .  .  .  .  0: *ast.ReturnStmt {
    46  .  .  .  .  .  .  Return: Assignment.go:4:1
    47  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
    48  .  .  .  .  .  .  .  0: *ast.BasicLit {
    49  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:4:8
    50  .  .  .  .  .  .  .  .  Kind: INT
    51  .  .  .  .  .  .  .  .  Value: "5"
    52  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  .  1: *ast.BasicLit {
    54  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:4:10
    55  .  .  .  .  .  .  .  .  Kind: INT
    56  .  .  .  .  .  .  .  .  Value: "7"
    57  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  }
    59  .  .  .  .  .  }
    60  .  .  .  .  }
    61  .  .  .  .  Rbrace: Assignment.go:6:1
    62  .  .  .  }
    63  .  .  }
    64  .  .  1: *ast.FuncDecl {
    65  .  .  .  Name: *ast.Ident {
    66  .  .  .  .  NamePos: Assignment.go:8:6
    67  .  .  .  .  Name: "me"
    68  .  .  .  .  Obj: *ast.Object {
    69  .  .  .  .  .  Kind: func
    70  .  .  .  .  .  Name: "me"
    71  .  .  .  .  .  Decl: *(obj @ 64)
    72  .  .  .  .  }
    73  .  .  .  }
    74  .  .  .  Type: *ast.FuncType {
    75  .  .  .  .  Func: Assignment.go:8:1
    76  .  .  .  .  Params: *ast.FieldList {
    77  .  .  .  .  .  Opening: Assignment.go:8:8
    78  .  .  .  .  .  Closing: Assignment.go:8:9
    79  .  .  .  .  }
    80  .  .  .  .  Results: *ast.FieldList {
    81  .  .  .  .  .  Opening: -
    82  .  .  .  .  .  List: []*ast.Field (len = 1) {
    83  .  .  .  .  .  .  0: *ast.Field {
    84  .  .  .  .  .  .  .  Type: *ast.Ident {
    85  .  .  .  .  .  .  .  .  NamePos: Assignment.go:8:11
    86  .  .  .  .  .  .  .  .  Name: "int"
    87  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  }
    90  .  .  .  .  .  Closing: -
    91  .  .  .  .  }
    92  .  .  .  }
    93  .  .  .  Body: *ast.BlockStmt {
    94  .  .  .  .  Lbrace: Assignment.go:8:15
    95  .  .  .  .  List: []ast.Stmt (len = 1) {
    96  .  .  .  .  .  0: *ast.ReturnStmt {
    97  .  .  .  .  .  .  Return: Assignment.go:9:1
    98  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
    99  .  .  .  .  .  .  .  0: *ast.BasicLit {
   100  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:9:8
   101  .  .  .  .  .  .  .  .  Kind: INT
   102  .  .  .  .  .  .  .  .  Value: "1"
   103  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  }
   105  .  .  .  .  .  }
   106  .  .  .  .  }
   107  .  .  .  .  Rbrace: Assignment.go:10:1
   108  .  .  .  }
   109  .  .  }
   110  .  .  2: *ast.FuncDecl {
   111  .  .  .  Name: *ast.Ident {
   112  .  .  .  .  NamePos: Assignment.go:12:6
   113  .  .  .  .  Name: "main"
   114  .  .  .  .  Obj: *ast.Object {
   115  .  .  .  .  .  Kind: func
   116  .  .  .  .  .  Name: "main"
   117  .  .  .  .  .  Decl: *(obj @ 110)
   118  .  .  .  .  }
   119  .  .  .  }
   120  .  .  .  Type: *ast.FuncType {
   121  .  .  .  .  Func: Assignment.go:12:1
   122  .  .  .  .  Params: *ast.FieldList {
   123  .  .  .  .  .  Opening: Assignment.go:12:10
   124  .  .  .  .  .  Closing: Assignment.go:12:11
   125  .  .  .  .  }
   126  .  .  .  }
   127  .  .  .  Body: *ast.BlockStmt {
   128  .  .  .  .  Lbrace: Assignment.go:12:13
   129  .  .  .  .  List: []ast.Stmt (len = 23) {
   130  .  .  .  .  .  0: *ast.DeclStmt {
   131  .  .  .  .  .  .  Decl: *ast.GenDecl {
   132  .  .  .  .  .  .  .  TokPos: Assignment.go:13:2
   133  .  .  .  .  .  .  .  Tok: var
   134  .  .  .  .  .  .  .  Lparen: -
   135  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   136  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   137  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   138  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   139  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:13:6
   140  .  .  .  .  .  .  .  .  .  .  .  Name: "yoyo"
   141  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   142  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   143  .  .  .  .  .  .  .  .  .  .  .  .  Name: "yoyo"
   144  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 136)
   145  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   146  .  .  .  .  .  .  .  .  .  .  .  }
   147  .  .  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   150  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:13:11
   151  .  .  .  .  .  .  .  .  .  .  Name: "string"
   152  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   154  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   155  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   156  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:13:20
   157  .  .  .  .  .  .  .  .  .  .  .  .  Name: "me"
   158  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   159  .  .  .  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  .  .  .  Lparen: Assignment.go:13:22
   161  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   162  .  .  .  .  .  .  .  .  .  .  .  Rparen: Assignment.go:13:23
   163  .  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  .  }
   167  .  .  .  .  .  .  .  Rparen: -
   168  .  .  .  .  .  .  }
   169  .  .  .  .  .  }
   170  .  .  .  .  .  1: *ast.DeclStmt {
   171  .  .  .  .  .  .  Decl: *ast.GenDecl {
   172  .  .  .  .  .  .  .  TokPos: Assignment.go:14:2
   173  .  .  .  .  .  .  .  Tok: var
   174  .  .  .  .  .  .  .  Lparen: -
   175  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   176  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   177  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
   178  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   179  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:14:6
   180  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   181  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   182  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   183  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   184  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 176)
   185  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   186  .  .  .  .  .  .  .  .  .  .  .  }
   187  .  .  .  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   189  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:14:8
   190  .  .  .  .  .  .  .  .  .  .  .  Name: "y"
   191  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   192  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   193  .  .  .  .  .  .  .  .  .  .  .  .  Name: "y"
   194  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 176)
   195  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   196  .  .  .  .  .  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  .  .  .  .  }
   198  .  .  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   200  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   201  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   202  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:14:13
   203  .  .  .  .  .  .  .  .  .  .  .  .  Name: "vals"
   204  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 11)
   205  .  .  .  .  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  .  .  .  .  .  Lparen: Assignment.go:14:17
   207  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   208  .  .  .  .  .  .  .  .  .  .  .  Rparen: Assignment.go:14:18
   209  .  .  .  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  Rparen: -
   214  .  .  .  .  .  .  }
   215  .  .  .  .  .  }
   216  .  .  .  .  .  2: *ast.AssignStmt {
   217  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   218  .  .  .  .  .  .  .  0: *ast.Ident {
   219  .  .  .  .  .  .  .  .  NamePos: Assignment.go:15:2
   220  .  .  .  .  .  .  .  .  Name: "z"
   221  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   222  .  .  .  .  .  .  .  .  .  Kind: var
   223  .  .  .  .  .  .  .  .  .  Name: "z"
   224  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 216)
   225  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  TokPos: Assignment.go:15:4
   229  .  .  .  .  .  .  Tok: :=
   230  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   231  .  .  .  .  .  .  .  0: *ast.CallExpr {
   232  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   233  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:15:7
   234  .  .  .  .  .  .  .  .  .  Name: "me"
   235  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   236  .  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  .  Lparen: Assignment.go:15:9
   238  .  .  .  .  .  .  .  .  Ellipsis: -
   239  .  .  .  .  .  .  .  .  Rparen: Assignment.go:15:10
   240  .  .  .  .  .  .  .  }
   241  .  .  .  .  .  .  }
   242  .  .  .  .  .  }
   243  .  .  .  .  .  3: *ast.ExprStmt {
   244  .  .  .  .  .  .  X: *ast.CallExpr {
   245  .  .  .  .  .  .  .  Fun: *ast.Ident {
   246  .  .  .  .  .  .  .  .  NamePos: Assignment.go:16:2
   247  .  .  .  .  .  .  .  .  Name: "println"
   248  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  Lparen: Assignment.go:16:9
   250  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   251  .  .  .  .  .  .  .  .  0: *ast.Ident {
   252  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:16:10
   253  .  .  .  .  .  .  .  .  .  Name: "x"
   254  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 181)
   255  .  .  .  .  .  .  .  .  }
   256  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  Ellipsis: -
   258  .  .  .  .  .  .  .  Rparen: Assignment.go:16:11
   259  .  .  .  .  .  .  }
   260  .  .  .  .  .  }
   261  .  .  .  .  .  4: *ast.ExprStmt {
   262  .  .  .  .  .  .  X: *ast.CallExpr {
   263  .  .  .  .  .  .  .  Fun: *ast.Ident {
   264  .  .  .  .  .  .  .  .  NamePos: Assignment.go:17:2
   265  .  .  .  .  .  .  .  .  Name: "println"
   266  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  Lparen: Assignment.go:17:9
   268  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   269  .  .  .  .  .  .  .  .  0: *ast.Ident {
   270  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:17:10
   271  .  .  .  .  .  .  .  .  .  Name: "y"
   272  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 191)
   273  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  .  Ellipsis: -
   276  .  .  .  .  .  .  .  Rparen: Assignment.go:17:11
   277  .  .  .  .  .  .  }
   278  .  .  .  .  .  }
   279  .  .  .  .  .  5: *ast.ExprStmt {
   280  .  .  .  .  .  .  X: *ast.CallExpr {
   281  .  .  .  .  .  .  .  Fun: *ast.Ident {
   282  .  .  .  .  .  .  .  .  NamePos: Assignment.go:18:2
   283  .  .  .  .  .  .  .  .  Name: "println"
   284  .  .  .  .  .  .  .  }
   285  .  .  .  .  .  .  .  Lparen: Assignment.go:18:9
   286  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   287  .  .  .  .  .  .  .  .  0: *ast.Ident {
   288  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:18:10
   289  .  .  .  .  .  .  .  .  .  Name: "z"
   290  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 221)
   291  .  .  .  .  .  .  .  .  }
   292  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  .  Ellipsis: -
   294  .  .  .  .  .  .  .  Rparen: Assignment.go:18:11
   295  .  .  .  .  .  .  }
   296  .  .  .  .  .  }
   297  .  .  .  .  .  6: *ast.DeclStmt {
   298  .  .  .  .  .  .  Decl: *ast.GenDecl {
   299  .  .  .  .  .  .  .  TokPos: Assignment.go:19:2
   300  .  .  .  .  .  .  .  Tok: var
   301  .  .  .  .  .  .  .  Lparen: -
   302  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   303  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   304  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
   305  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   306  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:19:6
   307  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   308  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   309  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   310  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   311  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 303)
   312  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   313  .  .  .  .  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   316  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:19:8
   317  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   318  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   319  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   320  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   321  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 303)
   322  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   323  .  .  .  .  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  .  .  .  }
   325  .  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 2) {
   327  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   328  .  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:19:12
   329  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   330  .  .  .  .  .  .  .  .  .  .  .  Value: "1"
   331  .  .  .  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   333  .  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:19:14
   334  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   335  .  .  .  .  .  .  .  .  .  .  .  Value: "2"
   336  .  .  .  .  .  .  .  .  .  .  }
   337  .  .  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  .  .  }
   339  .  .  .  .  .  .  .  }
   340  .  .  .  .  .  .  .  Rparen: -
   341  .  .  .  .  .  .  }
   342  .  .  .  .  .  }
   343  .  .  .  .  .  7: *ast.DeclStmt {
   344  .  .  .  .  .  .  Decl: *ast.GenDecl {
   345  .  .  .  .  .  .  .  TokPos: Assignment.go:20:2
   346  .  .  .  .  .  .  .  Tok: var
   347  .  .  .  .  .  .  .  Lparen: -
   348  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   349  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   350  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   351  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   352  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:20:6
   353  .  .  .  .  .  .  .  .  .  .  .  Name: "c"
   354  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   355  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   356  .  .  .  .  .  .  .  .  .  .  .  .  Name: "c"
   357  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 349)
   358  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   359  .  .  .  .  .  .  .  .  .  .  .  }
   360  .  .  .  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   363  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   364  .  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:20:10
   365  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   366  .  .  .  .  .  .  .  .  .  .  .  Value: "3"
   367  .  .  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  .  }
   370  .  .  .  .  .  .  .  }
   371  .  .  .  .  .  .  .  Rparen: -
   372  .  .  .  .  .  .  }
   373  .  .  .  .  .  }
   374  .  .  .  .  .  8: *ast.ExprStmt {
   375  .  .  .  .  .  .  X: *ast.CallExpr {
   376  .  .  .  .  .  .  .  Fun: *ast.Ident {
   377  .  .  .  .  .  .  .  .  NamePos: Assignment.go:21:2
   378  .  .  .  .  .  .  .  .  Name: "println"
   379  .  .  .  .  .  .  .  }
   380  .  .  .  .  .  .  .  Lparen: Assignment.go:21:9
   381  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   382  .  .  .  .  .  .  .  .  0: *ast.Ident {
   383  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:21:10
   384  .  .  .  .  .  .  .  .  .  Name: "a"
   385  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 308)
   386  .  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  Ellipsis: -
   389  .  .  .  .  .  .  .  Rparen: Assignment.go:21:11
   390  .  .  .  .  .  .  }
   391  .  .  .  .  .  }
   392  .  .  .  .  .  9: *ast.ExprStmt {
   393  .  .  .  .  .  .  X: *ast.CallExpr {
   394  .  .  .  .  .  .  .  Fun: *ast.Ident {
   395  .  .  .  .  .  .  .  .  NamePos: Assignment.go:22:2
   396  .  .  .  .  .  .  .  .  Name: "println"
   397  .  .  .  .  .  .  .  }
   398  .  .  .  .  .  .  .  Lparen: Assignment.go:22:9
   399  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   400  .  .  .  .  .  .  .  .  0: *ast.Ident {
   401  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:22:10
   402  .  .  .  .  .  .  .  .  .  Name: "b"
   403  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 318)
   404  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  }
   406  .  .  .  .  .  .  .  Ellipsis: -
   407  .  .  .  .  .  .  .  Rparen: Assignment.go:22:11
   408  .  .  .  .  .  .  }
   409  .  .  .  .  .  }
   410  .  .  .  .  .  10: *ast.ExprStmt {
   411  .  .  .  .  .  .  X: *ast.CallExpr {
   412  .  .  .  .  .  .  .  Fun: *ast.Ident {
   413  .  .  .  .  .  .  .  .  NamePos: Assignment.go:23:2
   414  .  .  .  .  .  .  .  .  Name: "println"
   415  .  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  .  Lparen: Assignment.go:23:9
   417  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   418  .  .  .  .  .  .  .  .  0: *ast.Ident {
   419  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:23:10
   420  .  .  .  .  .  .  .  .  .  Name: "c"
   421  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 354)
   422  .  .  .  .  .  .  .  .  }
   423  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  Ellipsis: -
   425  .  .  .  .  .  .  .  Rparen: Assignment.go:23:11
   426  .  .  .  .  .  .  }
   427  .  .  .  .  .  }
   428  .  .  .  .  .  11: *ast.AssignStmt {
   429  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   430  .  .  .  .  .  .  .  0: *ast.Ident {
   431  .  .  .  .  .  .  .  .  NamePos: Assignment.go:24:2
   432  .  .  .  .  .  .  .  .  Name: "d"
   433  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   434  .  .  .  .  .  .  .  .  .  Kind: var
   435  .  .  .  .  .  .  .  .  .  Name: "d"
   436  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 428)
   437  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  .  1: *ast.Ident {
   440  .  .  .  .  .  .  .  .  NamePos: Assignment.go:24:4
   441  .  .  .  .  .  .  .  .  Name: "f"
   442  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   443  .  .  .  .  .  .  .  .  .  Kind: var
   444  .  .  .  .  .  .  .  .  .  Name: "f"
   445  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 428)
   446  .  .  .  .  .  .  .  .  }
   447  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  TokPos: Assignment.go:24:6
   450  .  .  .  .  .  .  Tok: :=
   451  .  .  .  .  .  .  Rhs: []ast.Expr (len = 2) {
   452  .  .  .  .  .  .  .  0: *ast.BasicLit {
   453  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:24:9
   454  .  .  .  .  .  .  .  .  Kind: INT
   455  .  .  .  .  .  .  .  .  Value: "1"
   456  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  1: *ast.BasicLit {
   458  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:24:11
   459  .  .  .  .  .  .  .  .  Kind: INT
   460  .  .  .  .  .  .  .  .  Value: "2"
   461  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  }
   463  .  .  .  .  .  }
   464  .  .  .  .  .  12: *ast.AssignStmt {
   465  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   466  .  .  .  .  .  .  .  0: *ast.Ident {
   467  .  .  .  .  .  .  .  .  NamePos: Assignment.go:25:2
   468  .  .  .  .  .  .  .  .  Name: "g"
   469  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   470  .  .  .  .  .  .  .  .  .  Kind: var
   471  .  .  .  .  .  .  .  .  .  Name: "g"
   472  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 464)
   473  .  .  .  .  .  .  .  .  }
   474  .  .  .  .  .  .  .  }
   475  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  TokPos: Assignment.go:25:4
   477  .  .  .  .  .  .  Tok: :=
   478  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   479  .  .  .  .  .  .  .  0: *ast.BasicLit {
   480  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:25:7
   481  .  .  .  .  .  .  .  .  Kind: INT
   482  .  .  .  .  .  .  .  .  Value: "3"
   483  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  }
   485  .  .  .  .  .  }
   486  .  .  .  .  .  13: *ast.ExprStmt {
   487  .  .  .  .  .  .  X: *ast.CallExpr {
   488  .  .  .  .  .  .  .  Fun: *ast.Ident {
   489  .  .  .  .  .  .  .  .  NamePos: Assignment.go:26:2
   490  .  .  .  .  .  .  .  .  Name: "println"
   491  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  Lparen: Assignment.go:26:9
   493  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   494  .  .  .  .  .  .  .  .  0: *ast.Ident {
   495  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:26:10
   496  .  .  .  .  .  .  .  .  .  Name: "d"
   497  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 433)
   498  .  .  .  .  .  .  .  .  }
   499  .  .  .  .  .  .  .  }
   500  .  .  .  .  .  .  .  Ellipsis: -
   501  .  .  .  .  .  .  .  Rparen: Assignment.go:26:11
   502  .  .  .  .  .  .  }
   503  .  .  .  .  .  }
   504  .  .  .  .  .  14: *ast.ExprStmt {
   505  .  .  .  .  .  .  X: *ast.CallExpr {
   506  .  .  .  .  .  .  .  Fun: *ast.Ident {
   507  .  .  .  .  .  .  .  .  NamePos: Assignment.go:27:2
   508  .  .  .  .  .  .  .  .  Name: "println"
   509  .  .  .  .  .  .  .  }
   510  .  .  .  .  .  .  .  Lparen: Assignment.go:27:9
   511  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   512  .  .  .  .  .  .  .  .  0: *ast.Ident {
   513  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:27:10
   514  .  .  .  .  .  .  .  .  .  Name: "f"
   515  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 442)
   516  .  .  .  .  .  .  .  .  }
   517  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  Ellipsis: -
   519  .  .  .  .  .  .  .  Rparen: Assignment.go:27:11
   520  .  .  .  .  .  .  }
   521  .  .  .  .  .  }
   522  .  .  .  .  .  15: *ast.ExprStmt {
   523  .  .  .  .  .  .  X: *ast.CallExpr {
   524  .  .  .  .  .  .  .  Fun: *ast.Ident {
   525  .  .  .  .  .  .  .  .  NamePos: Assignment.go:28:2
   526  .  .  .  .  .  .  .  .  Name: "println"
   527  .  .  .  .  .  .  .  }
   528  .  .  .  .  .  .  .  Lparen: Assignment.go:28:9
   529  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   530  .  .  .  .  .  .  .  .  0: *ast.Ident {
   531  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:28:10
   532  .  .  .  .  .  .  .  .  .  Name: "g"
   533  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 469)
   534  .  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  .  Ellipsis: -
   537  .  .  .  .  .  .  .  Rparen: Assignment.go:28:11
   538  .  .  .  .  .  .  }
   539  .  .  .  .  .  }
   540  .  .  .  .  .  16: *ast.AssignStmt {
   541  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   542  .  .  .  .  .  .  .  0: *ast.Ident {
   543  .  .  .  .  .  .  .  .  NamePos: Assignment.go:29:2
   544  .  .  .  .  .  .  .  .  Name: "y"
   545  .  .  .  .  .  .  .  .  Obj: *(obj @ 191)
   546  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  TokPos: Assignment.go:29:4
   549  .  .  .  .  .  .  Tok: =
   550  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   551  .  .  .  .  .  .  .  0: *ast.CallExpr {
   552  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   553  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:29:6
   554  .  .  .  .  .  .  .  .  .  Name: "me"
   555  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   556  .  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  .  .  Lparen: Assignment.go:29:8
   558  .  .  .  .  .  .  .  .  Ellipsis: -
   559  .  .  .  .  .  .  .  .  Rparen: Assignment.go:29:9
   560  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  }
   562  .  .  .  .  .  }
   563  .  .  .  .  .  17: *ast.ExprStmt {
   564  .  .  .  .  .  .  X: *ast.CallExpr {
   565  .  .  .  .  .  .  .  Fun: *ast.Ident {
   566  .  .  .  .  .  .  .  .  NamePos: Assignment.go:30:2
   567  .  .  .  .  .  .  .  .  Name: "println"
   568  .  .  .  .  .  .  .  }
   569  .  .  .  .  .  .  .  Lparen: Assignment.go:30:9
   570  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   571  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   572  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   573  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:30:10
   574  .  .  .  .  .  .  .  .  .  .  Name: "me"
   575  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   576  .  .  .  .  .  .  .  .  .  }
   577  .  .  .  .  .  .  .  .  .  Lparen: Assignment.go:30:12
   578  .  .  .  .  .  .  .  .  .  Ellipsis: -
   579  .  .  .  .  .  .  .  .  .  Rparen: Assignment.go:30:13
   580  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  }
   582  .  .  .  .  .  .  .  Ellipsis: -
   583  .  .  .  .  .  .  .  Rparen: Assignment.go:30:14
   584  .  .  .  .  .  .  }
   585  .  .  .  .  .  }
   586  .  .  .  .  .  18: *ast.AssignStmt {
   587  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   588  .  .  .  .  .  .  .  0: *ast.Ident {
   589  .  .  .  .  .  .  .  .  NamePos: Assignment.go:31:2
   590  .  .  .  .  .  .  .  .  Name: "array"
   591  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   592  .  .  .  .  .  .  .  .  .  Kind: var
   593  .  .  .  .  .  .  .  .  .  Name: "array"
   594  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 586)
   595  .  .  .  .  .  .  .  .  }
   596  .  .  .  .  .  .  .  }
   597  .  .  .  .  .  .  }
   598  .  .  .  .  .  .  TokPos: Assignment.go:31:8
   599  .  .  .  .  .  .  Tok: :=
   600  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   601  .  .  .  .  .  .  .  0: *ast.CallExpr {
   602  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   603  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:31:11
   604  .  .  .  .  .  .  .  .  .  Name: "make"
   605  .  .  .  .  .  .  .  .  }
   606  .  .  .  .  .  .  .  .  Lparen: Assignment.go:31:15
   607  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   608  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
   609  .  .  .  .  .  .  .  .  .  .  Lbrack: Assignment.go:31:16
   610  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   611  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:31:18
   612  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   613  .  .  .  .  .  .  .  .  .  .  }
   614  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   616  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:31:25
   617  .  .  .  .  .  .  .  .  .  .  Kind: INT
   618  .  .  .  .  .  .  .  .  .  .  Value: "5"
   619  .  .  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  .  }
   621  .  .  .  .  .  .  .  .  Ellipsis: -
   622  .  .  .  .  .  .  .  .  Rparen: Assignment.go:31:26
   623  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  }
   625  .  .  .  .  .  }
   626  .  .  .  .  .  19: *ast.AssignStmt {
   627  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   628  .  .  .  .  .  .  .  0: *ast.Ident {
   629  .  .  .  .  .  .  .  .  NamePos: Assignment.go:32:2
   630  .  .  .  .  .  .  .  .  Name: "array"
   631  .  .  .  .  .  .  .  .  Obj: *(obj @ 591)
   632  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  }
   634  .  .  .  .  .  .  TokPos: Assignment.go:32:8
   635  .  .  .  .  .  .  Tok: =
   636  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   637  .  .  .  .  .  .  .  0: *ast.CallExpr {
   638  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   639  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:32:10
   640  .  .  .  .  .  .  .  .  .  Name: "make"
   641  .  .  .  .  .  .  .  .  }
   642  .  .  .  .  .  .  .  .  Lparen: Assignment.go:32:14
   643  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
   644  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
   645  .  .  .  .  .  .  .  .  .  .  Lbrack: Assignment.go:32:15
   646  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   647  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:32:17
   648  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   649  .  .  .  .  .  .  .  .  .  .  }
   650  .  .  .  .  .  .  .  .  .  }
   651  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   652  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:32:25
   653  .  .  .  .  .  .  .  .  .  .  Kind: INT
   654  .  .  .  .  .  .  .  .  .  .  Value: "10"
   655  .  .  .  .  .  .  .  .  .  }
   656  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   657  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:32:29
   658  .  .  .  .  .  .  .  .  .  .  Kind: INT
   659  .  .  .  .  .  .  .  .  .  .  Value: "15"
   660  .  .  .  .  .  .  .  .  .  }
   661  .  .  .  .  .  .  .  .  }
   662  .  .  .  .  .  .  .  .  Ellipsis: -
   663  .  .  .  .  .  .  .  .  Rparen: Assignment.go:32:31
   664  .  .  .  .  .  .  .  }
   665  .  .  .  .  .  .  }
   666  .  .  .  .  .  }
   667  .  .  .  .  .  20: *ast.AssignStmt {
   668  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   669  .  .  .  .  .  .  .  0: *ast.Ident {
   670  .  .  .  .  .  .  .  .  NamePos: Assignment.go:33:2
   671  .  .  .  .  .  .  .  .  Name: "sucker"
   672  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   673  .  .  .  .  .  .  .  .  .  Kind: var
   674  .  .  .  .  .  .  .  .  .  Name: "sucker"
   675  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 667)
   676  .  .  .  .  .  .  .  .  }
   677  .  .  .  .  .  .  .  }
   678  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  TokPos: Assignment.go:33:9
   680  .  .  .  .  .  .  Tok: :=
   681  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   682  .  .  .  .  .  .  .  0: *ast.CallExpr {
   683  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   684  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:33:12
   685  .  .  .  .  .  .  .  .  .  Name: "append"
   686  .  .  .  .  .  .  .  .  }
   687  .  .  .  .  .  .  .  .  Lparen: Assignment.go:33:18
   688  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
   689  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   690  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:33:19
   691  .  .  .  .  .  .  .  .  .  .  Name: "array"
   692  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 591)
   693  .  .  .  .  .  .  .  .  .  }
   694  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   695  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:33:25
   696  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   697  .  .  .  .  .  .  .  .  .  .  Value: "\"a\""
   698  .  .  .  .  .  .  .  .  .  }
   699  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   700  .  .  .  .  .  .  .  .  .  .  ValuePos: Assignment.go:33:29
   701  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   702  .  .  .  .  .  .  .  .  .  .  Value: "\"b\""
   703  .  .  .  .  .  .  .  .  .  }
   704  .  .  .  .  .  .  .  .  }
   705  .  .  .  .  .  .  .  .  Ellipsis: -
   706  .  .  .  .  .  .  .  .  Rparen: Assignment.go:33:32
   707  .  .  .  .  .  .  .  }
   708  .  .  .  .  .  .  }
   709  .  .  .  .  .  }
   710  .  .  .  .  .  21: *ast.ExprStmt {
   711  .  .  .  .  .  .  X: *ast.CallExpr {
   712  .  .  .  .  .  .  .  Fun: *ast.Ident {
   713  .  .  .  .  .  .  .  .  NamePos: Assignment.go:34:2
   714  .  .  .  .  .  .  .  .  Name: "println"
   715  .  .  .  .  .  .  .  }
   716  .  .  .  .  .  .  .  Lparen: Assignment.go:34:9
   717  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   718  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   719  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   720  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:34:10
   721  .  .  .  .  .  .  .  .  .  .  Name: "len"
   722  .  .  .  .  .  .  .  .  .  }
   723  .  .  .  .  .  .  .  .  .  Lparen: Assignment.go:34:13
   724  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   725  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   726  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:34:14
   727  .  .  .  .  .  .  .  .  .  .  .  Name: "array"
   728  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 591)
   729  .  .  .  .  .  .  .  .  .  .  }
   730  .  .  .  .  .  .  .  .  .  }
   731  .  .  .  .  .  .  .  .  .  Ellipsis: -
   732  .  .  .  .  .  .  .  .  .  Rparen: Assignment.go:34:19
   733  .  .  .  .  .  .  .  .  }
   734  .  .  .  .  .  .  .  }
   735  .  .  .  .  .  .  .  Ellipsis: -
   736  .  .  .  .  .  .  .  Rparen: Assignment.go:34:20
   737  .  .  .  .  .  .  }
   738  .  .  .  .  .  }
   739  .  .  .  .  .  22: *ast.ExprStmt {
   740  .  .  .  .  .  .  X: *ast.CallExpr {
   741  .  .  .  .  .  .  .  Fun: *ast.Ident {
   742  .  .  .  .  .  .  .  .  NamePos: Assignment.go:35:2
   743  .  .  .  .  .  .  .  .  Name: "println"
   744  .  .  .  .  .  .  .  }
   745  .  .  .  .  .  .  .  Lparen: Assignment.go:35:9
   746  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   747  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   748  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   749  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:35:10
   750  .  .  .  .  .  .  .  .  .  .  Name: "cap"
   751  .  .  .  .  .  .  .  .  .  }
   752  .  .  .  .  .  .  .  .  .  Lparen: Assignment.go:35:13
   753  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   754  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   755  .  .  .  .  .  .  .  .  .  .  .  NamePos: Assignment.go:35:14
   756  .  .  .  .  .  .  .  .  .  .  .  Name: "sucker"
   757  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 672)
   758  .  .  .  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  .  .  .  }
   760  .  .  .  .  .  .  .  .  .  Ellipsis: -
   761  .  .  .  .  .  .  .  .  .  Rparen: Assignment.go:35:20
   762  .  .  .  .  .  .  .  .  }
   763  .  .  .  .  .  .  .  }
   764  .  .  .  .  .  .  .  Ellipsis: -
   765  .  .  .  .  .  .  .  Rparen: Assignment.go:35:21
   766  .  .  .  .  .  .  }
   767  .  .  .  .  .  }
   768  .  .  .  .  }
   769  .  .  .  .  Rbrace: Assignment.go:37:1
   770  .  .  .  }
   771  .  .  }
   772  .  }
   773  .  Scope: *ast.Scope {
   774  .  .  Objects: map[string]*ast.Object (len = 3) {
   775  .  .  .  "vals": *(obj @ 11)
   776  .  .  .  "me": *(obj @ 68)
   777  .  .  .  "main": *(obj @ 114)
   778  .  .  }
   779  .  }
   780  .  Unresolved: []*ast.Ident (len = 23) {
   781  .  .  0: *(obj @ 27)
   782  .  .  1: *(obj @ 33)
   783  .  .  2: *(obj @ 84)
   784  .  .  3: *(obj @ 149)
   785  .  .  4: *(obj @ 245)
   786  .  .  5: *(obj @ 263)
   787  .  .  6: *(obj @ 281)
   788  .  .  7: *(obj @ 376)
   789  .  .  8: *(obj @ 394)
   790  .  .  9: *(obj @ 412)
   791  .  .  10: *(obj @ 488)
   792  .  .  11: *(obj @ 506)
   793  .  .  12: *(obj @ 524)
   794  .  .  13: *(obj @ 565)
   795  .  .  14: *(obj @ 602)
   796  .  .  15: *(obj @ 610)
   797  .  .  16: *(obj @ 638)
   798  .  .  17: *(obj @ 646)
   799  .  .  18: *(obj @ 683)
   800  .  .  19: *(obj @ 712)
   801  .  .  20: *(obj @ 719)
   802  .  .  21: *(obj @ 741)
   803  .  .  22: *(obj @ 748)
   804  .  }
   805  }
