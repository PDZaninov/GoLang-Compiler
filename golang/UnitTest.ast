     0  *ast.File {
     1  .  Package: UnitTest.go:1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: UnitTest.go:1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: UnitTest.go:3:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  Kind: func
    13  .  .  .  .  .  Name: "main"
    14  .  .  .  .  .  Decl: *(obj @ 7)
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  Func: UnitTest.go:3:1
    19  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  Opening: UnitTest.go:3:10
    21  .  .  .  .  .  Closing: UnitTest.go:3:11
    22  .  .  .  .  }
    23  .  .  .  .  Results: *ast.FieldList {
    24  .  .  .  .  .  Opening: -
    25  .  .  .  .  .  List: []*ast.Field (len = 1) {
    26  .  .  .  .  .  .  0: *ast.Field {
    27  .  .  .  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:3:13
    29  .  .  .  .  .  .  .  .  Name: "int"
    30  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  }
    32  .  .  .  .  .  }
    33  .  .  .  .  .  Closing: -
    34  .  .  .  .  }
    35  .  .  .  }
    36  .  .  .  Body: *ast.BlockStmt {
    37  .  .  .  .  Lbrace: UnitTest.go:3:16
    38  .  .  .  .  List: []ast.Stmt (len = 11) {
    39  .  .  .  .  .  0: *ast.AssignStmt {
    40  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    41  .  .  .  .  .  .  .  0: *ast.Ident {
    42  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:4:4
    43  .  .  .  .  .  .  .  .  Name: "result"
    44  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    45  .  .  .  .  .  .  .  .  .  Kind: var
    46  .  .  .  .  .  .  .  .  .  Name: "result"
    47  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 39)
    48  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  TokPos: UnitTest.go:4:11
    52  .  .  .  .  .  .  Tok: :=
    53  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    54  .  .  .  .  .  .  .  0: *ast.BasicLit {
    55  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:4:14
    56  .  .  .  .  .  .  .  .  Kind: INT
    57  .  .  .  .  .  .  .  .  Value: "0"
    58  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  }
    60  .  .  .  .  .  }
    61  .  .  .  .  .  1: *ast.AssignStmt {
    62  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    63  .  .  .  .  .  .  .  0: *ast.Ident {
    64  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:5:4
    65  .  .  .  .  .  .  .  .  Name: "b"
    66  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    67  .  .  .  .  .  .  .  .  .  Kind: var
    68  .  .  .  .  .  .  .  .  .  Name: "b"
    69  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 61)
    70  .  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  TokPos: UnitTest.go:5:6
    74  .  .  .  .  .  .  Tok: :=
    75  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    76  .  .  .  .  .  .  .  0: *ast.CompositeLit {
    77  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
    78  .  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:5:9
    79  .  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
    80  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:10
    81  .  .  .  .  .  .  .  .  .  .  Kind: INT
    82  .  .  .  .  .  .  .  .  .  .  Value: "5"
    83  .  .  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
    85  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:5:12
    86  .  .  .  .  .  .  .  .  .  .  Name: "int"
    87  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  .  Lbrace: UnitTest.go:5:15
    90  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 5) {
    91  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    92  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:16
    93  .  .  .  .  .  .  .  .  .  .  Kind: INT
    94  .  .  .  .  .  .  .  .  .  .  Value: "1"
    95  .  .  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
    97  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:20
    98  .  .  .  .  .  .  .  .  .  .  Kind: INT
    99  .  .  .  .  .  .  .  .  .  .  Value: "2"
   100  .  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   102  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:23
   103  .  .  .  .  .  .  .  .  .  .  Kind: INT
   104  .  .  .  .  .  .  .  .  .  .  Value: "3"
   105  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {
   107  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:26
   108  .  .  .  .  .  .  .  .  .  .  Kind: INT
   109  .  .  .  .  .  .  .  .  .  .  Value: "4"
   110  .  .  .  .  .  .  .  .  .  }
   111  .  .  .  .  .  .  .  .  .  4: *ast.BasicLit {
   112  .  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:5:29
   113  .  .  .  .  .  .  .  .  .  .  Kind: INT
   114  .  .  .  .  .  .  .  .  .  .  Value: "5"
   115  .  .  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  .  Rbrace: UnitTest.go:5:30
   118  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  }
   120  .  .  .  .  .  }
   121  .  .  .  .  .  2: *ast.AssignStmt {
   122  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   123  .  .  .  .  .  .  .  0: *ast.Ident {
   124  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:6:4
   125  .  .  .  .  .  .  .  .  Name: "s"
   126  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   127  .  .  .  .  .  .  .  .  .  Kind: var
   128  .  .  .  .  .  .  .  .  .  Name: "s"
   129  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 121)
   130  .  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  TokPos: UnitTest.go:6:6
   134  .  .  .  .  .  .  Tok: :=
   135  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   136  .  .  .  .  .  .  .  0: *ast.SliceExpr {
   137  .  .  .  .  .  .  .  .  X: *ast.Ident {
   138  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:6:9
   139  .  .  .  .  .  .  .  .  .  Name: "b"
   140  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   141  .  .  .  .  .  .  .  .  }
   142  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:6:10
   143  .  .  .  .  .  .  .  .  Low: *ast.BasicLit {
   144  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:6:11
   145  .  .  .  .  .  .  .  .  .  Kind: INT
   146  .  .  .  .  .  .  .  .  .  Value: "1"
   147  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  High: *ast.BasicLit {
   149  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:6:13
   150  .  .  .  .  .  .  .  .  .  Kind: INT
   151  .  .  .  .  .  .  .  .  .  Value: "3"
   152  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  Slice3: false
   154  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:6:14
   155  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  }
   157  .  .  .  .  .  }
   158  .  .  .  .  .  3: *ast.ForStmt {
   159  .  .  .  .  .  .  For: UnitTest.go:7:4
   160  .  .  .  .  .  .  Init: *ast.AssignStmt {
   161  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   162  .  .  .  .  .  .  .  .  0: *ast.Ident {
   163  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:7:8
   164  .  .  .  .  .  .  .  .  .  Name: "j"
   165  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   166  .  .  .  .  .  .  .  .  .  .  Kind: var
   167  .  .  .  .  .  .  .  .  .  .  Name: "j"
   168  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 160)
   169  .  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  TokPos: UnitTest.go:7:10
   173  .  .  .  .  .  .  .  Tok: :=
   174  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   175  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   176  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:7:13
   177  .  .  .  .  .  .  .  .  .  Kind: INT
   178  .  .  .  .  .  .  .  .  .  Value: "0"
   179  .  .  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   183  .  .  .  .  .  .  .  X: *ast.Ident {
   184  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:7:16
   185  .  .  .  .  .  .  .  .  Name: "j"
   186  .  .  .  .  .  .  .  .  Obj: *(obj @ 165)
   187  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  .  OpPos: UnitTest.go:7:18
   189  .  .  .  .  .  .  .  Op: <
   190  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   191  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   192  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:7:20
   193  .  .  .  .  .  .  .  .  .  Name: "len"
   194  .  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  .  .  Lparen: UnitTest.go:7:23
   196  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   197  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   198  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:7:24
   199  .  .  .  .  .  .  .  .  .  .  Name: "s"
   200  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   201  .  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  .  Ellipsis: -
   204  .  .  .  .  .  .  .  .  Rparen: UnitTest.go:7:25
   205  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   208  .  .  .  .  .  .  .  X: *ast.Ident {
   209  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:7:28
   210  .  .  .  .  .  .  .  .  Name: "j"
   211  .  .  .  .  .  .  .  .  Obj: *(obj @ 165)
   212  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  TokPos: UnitTest.go:7:29
   214  .  .  .  .  .  .  .  Tok: ++
   215  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  Body: *ast.BlockStmt {
   217  .  .  .  .  .  .  .  Lbrace: UnitTest.go:7:32
   218  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   219  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   220  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   221  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   222  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:8:3
   223  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   224  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 44)
   225  .  .  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  .  .  TokPos: UnitTest.go:8:10
   228  .  .  .  .  .  .  .  .  .  Tok: +=
   229  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   230  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   231  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   232  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:8:13
   233  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   234  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   235  .  .  .  .  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:8:14
   237  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   238  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:8:15
   239  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   240  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 165)
   241  .  .  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:8:16
   243  .  .  .  .  .  .  .  .  .  .  }
   244  .  .  .  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  .  .  }
   246  .  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  .  Rbrace: UnitTest.go:9:4
   248  .  .  .  .  .  .  }
   249  .  .  .  .  .  }
   250  .  .  .  .  .  4: *ast.AssignStmt {
   251  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   252  .  .  .  .  .  .  .  0: *ast.Ident {
   253  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:10:4
   254  .  .  .  .  .  .  .  .  Name: "s"
   255  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   256  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  }
   258  .  .  .  .  .  .  TokPos: UnitTest.go:10:6
   259  .  .  .  .  .  .  Tok: =
   260  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   261  .  .  .  .  .  .  .  0: *ast.SliceExpr {
   262  .  .  .  .  .  .  .  .  X: *ast.Ident {
   263  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:10:8
   264  .  .  .  .  .  .  .  .  .  Name: "b"
   265  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   266  .  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:10:9
   268  .  .  .  .  .  .  .  .  High: *ast.BasicLit {
   269  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:10:11
   270  .  .  .  .  .  .  .  .  .  Kind: INT
   271  .  .  .  .  .  .  .  .  .  Value: "3"
   272  .  .  .  .  .  .  .  .  }
   273  .  .  .  .  .  .  .  .  Slice3: false
   274  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:10:12
   275  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  }
   277  .  .  .  .  .  }
   278  .  .  .  .  .  5: *ast.ForStmt {
   279  .  .  .  .  .  .  For: UnitTest.go:11:4
   280  .  .  .  .  .  .  Init: *ast.AssignStmt {
   281  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   282  .  .  .  .  .  .  .  .  0: *ast.Ident {
   283  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:11:8
   284  .  .  .  .  .  .  .  .  .  Name: "j"
   285  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   286  .  .  .  .  .  .  .  .  .  .  Kind: var
   287  .  .  .  .  .  .  .  .  .  .  Name: "j"
   288  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 280)
   289  .  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  }
   291  .  .  .  .  .  .  .  }
   292  .  .  .  .  .  .  .  TokPos: UnitTest.go:11:10
   293  .  .  .  .  .  .  .  Tok: :=
   294  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   295  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   296  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:11:13
   297  .  .  .  .  .  .  .  .  .  Kind: INT
   298  .  .  .  .  .  .  .  .  .  Value: "0"
   299  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  }
   301  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   303  .  .  .  .  .  .  .  X: *ast.Ident {
   304  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:11:16
   305  .  .  .  .  .  .  .  .  Name: "j"
   306  .  .  .  .  .  .  .  .  Obj: *(obj @ 285)
   307  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  OpPos: UnitTest.go:11:18
   309  .  .  .  .  .  .  .  Op: <
   310  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   311  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   312  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:11:20
   313  .  .  .  .  .  .  .  .  .  Name: "len"
   314  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  .  Lparen: UnitTest.go:11:23
   316  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   317  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   318  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:11:24
   319  .  .  .  .  .  .  .  .  .  .  Name: "s"
   320  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   321  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  .  Ellipsis: -
   324  .  .  .  .  .  .  .  .  Rparen: UnitTest.go:11:25
   325  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   328  .  .  .  .  .  .  .  X: *ast.Ident {
   329  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:11:28
   330  .  .  .  .  .  .  .  .  Name: "j"
   331  .  .  .  .  .  .  .  .  Obj: *(obj @ 285)
   332  .  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  .  TokPos: UnitTest.go:11:29
   334  .  .  .  .  .  .  .  Tok: ++
   335  .  .  .  .  .  .  }
   336  .  .  .  .  .  .  Body: *ast.BlockStmt {
   337  .  .  .  .  .  .  .  Lbrace: UnitTest.go:11:32
   338  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   339  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   340  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   341  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   342  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:12:3
   343  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   344  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 44)
   345  .  .  .  .  .  .  .  .  .  .  }
   346  .  .  .  .  .  .  .  .  .  }
   347  .  .  .  .  .  .  .  .  .  TokPos: UnitTest.go:12:10
   348  .  .  .  .  .  .  .  .  .  Tok: +=
   349  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   350  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   351  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   352  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:12:13
   353  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   354  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   355  .  .  .  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:12:14
   357  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   358  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:12:15
   359  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   360  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 285)
   361  .  .  .  .  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:12:16
   363  .  .  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  .  .  }
   365  .  .  .  .  .  .  .  .  }
   366  .  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  .  Rbrace: UnitTest.go:13:4
   368  .  .  .  .  .  .  }
   369  .  .  .  .  .  }
   370  .  .  .  .  .  6: *ast.AssignStmt {
   371  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   372  .  .  .  .  .  .  .  0: *ast.Ident {
   373  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:14:4
   374  .  .  .  .  .  .  .  .  Name: "s"
   375  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   376  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  TokPos: UnitTest.go:14:6
   379  .  .  .  .  .  .  Tok: =
   380  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   381  .  .  .  .  .  .  .  0: *ast.SliceExpr {
   382  .  .  .  .  .  .  .  .  X: *ast.Ident {
   383  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:14:8
   384  .  .  .  .  .  .  .  .  .  Name: "b"
   385  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   386  .  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:14:9
   388  .  .  .  .  .  .  .  .  Low: *ast.BasicLit {
   389  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:14:10
   390  .  .  .  .  .  .  .  .  .  Kind: INT
   391  .  .  .  .  .  .  .  .  .  Value: "3"
   392  .  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  .  .  Slice3: false
   394  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:14:12
   395  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  }
   397  .  .  .  .  .  }
   398  .  .  .  .  .  7: *ast.ForStmt {
   399  .  .  .  .  .  .  For: UnitTest.go:15:4
   400  .  .  .  .  .  .  Init: *ast.AssignStmt {
   401  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   402  .  .  .  .  .  .  .  .  0: *ast.Ident {
   403  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:15:8
   404  .  .  .  .  .  .  .  .  .  Name: "j"
   405  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   406  .  .  .  .  .  .  .  .  .  .  Kind: var
   407  .  .  .  .  .  .  .  .  .  .  Name: "j"
   408  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 400)
   409  .  .  .  .  .  .  .  .  .  }
   410  .  .  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  .  TokPos: UnitTest.go:15:10
   413  .  .  .  .  .  .  .  Tok: :=
   414  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   415  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   416  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:15:13
   417  .  .  .  .  .  .  .  .  .  Kind: INT
   418  .  .  .  .  .  .  .  .  .  Value: "0"
   419  .  .  .  .  .  .  .  .  }
   420  .  .  .  .  .  .  .  }
   421  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   423  .  .  .  .  .  .  .  X: *ast.Ident {
   424  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:15:16
   425  .  .  .  .  .  .  .  .  Name: "j"
   426  .  .  .  .  .  .  .  .  Obj: *(obj @ 405)
   427  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  OpPos: UnitTest.go:15:18
   429  .  .  .  .  .  .  .  Op: <
   430  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   431  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   432  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:15:20
   433  .  .  .  .  .  .  .  .  .  Name: "len"
   434  .  .  .  .  .  .  .  .  }
   435  .  .  .  .  .  .  .  .  Lparen: UnitTest.go:15:23
   436  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   437  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   438  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:15:24
   439  .  .  .  .  .  .  .  .  .  .  Name: "s"
   440  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   441  .  .  .  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  .  .  }
   443  .  .  .  .  .  .  .  .  Ellipsis: -
   444  .  .  .  .  .  .  .  .  Rparen: UnitTest.go:15:25
   445  .  .  .  .  .  .  .  }
   446  .  .  .  .  .  .  }
   447  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   448  .  .  .  .  .  .  .  X: *ast.Ident {
   449  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:15:28
   450  .  .  .  .  .  .  .  .  Name: "j"
   451  .  .  .  .  .  .  .  .  Obj: *(obj @ 405)
   452  .  .  .  .  .  .  .  }
   453  .  .  .  .  .  .  .  TokPos: UnitTest.go:15:29
   454  .  .  .  .  .  .  .  Tok: ++
   455  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  Body: *ast.BlockStmt {
   457  .  .  .  .  .  .  .  Lbrace: UnitTest.go:15:32
   458  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   459  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   460  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   461  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   462  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:16:3
   463  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   464  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 44)
   465  .  .  .  .  .  .  .  .  .  .  }
   466  .  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  .  TokPos: UnitTest.go:16:10
   468  .  .  .  .  .  .  .  .  .  Tok: +=
   469  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   470  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   471  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   472  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:16:13
   473  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   474  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   475  .  .  .  .  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:16:14
   477  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   478  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:16:15
   479  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   480  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 405)
   481  .  .  .  .  .  .  .  .  .  .  .  }
   482  .  .  .  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:16:16
   483  .  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  .  .  }
   486  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  Rbrace: UnitTest.go:17:4
   488  .  .  .  .  .  .  }
   489  .  .  .  .  .  }
   490  .  .  .  .  .  8: *ast.AssignStmt {
   491  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   492  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   493  .  .  .  .  .  .  .  .  X: *ast.Ident {
   494  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:18:4
   495  .  .  .  .  .  .  .  .  .  Name: "s"
   496  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   497  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:18:5
   499  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
   500  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:18:6
   501  .  .  .  .  .  .  .  .  .  Kind: INT
   502  .  .  .  .  .  .  .  .  .  Value: "0"
   503  .  .  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:18:7
   505  .  .  .  .  .  .  .  }
   506  .  .  .  .  .  .  }
   507  .  .  .  .  .  .  TokPos: UnitTest.go:18:9
   508  .  .  .  .  .  .  Tok: =
   509  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   510  .  .  .  .  .  .  .  0: *ast.BasicLit {
   511  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:18:11
   512  .  .  .  .  .  .  .  .  Kind: INT
   513  .  .  .  .  .  .  .  .  Value: "10"
   514  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  }
   516  .  .  .  .  .  }
   517  .  .  .  .  .  9: *ast.ForStmt {
   518  .  .  .  .  .  .  For: UnitTest.go:19:4
   519  .  .  .  .  .  .  Init: *ast.AssignStmt {
   520  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   521  .  .  .  .  .  .  .  .  0: *ast.Ident {
   522  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:19:8
   523  .  .  .  .  .  .  .  .  .  Name: "j"
   524  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   525  .  .  .  .  .  .  .  .  .  .  Kind: var
   526  .  .  .  .  .  .  .  .  .  .  Name: "j"
   527  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 519)
   528  .  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  }
   530  .  .  .  .  .  .  .  }
   531  .  .  .  .  .  .  .  TokPos: UnitTest.go:19:10
   532  .  .  .  .  .  .  .  Tok: :=
   533  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   534  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   535  .  .  .  .  .  .  .  .  .  ValuePos: UnitTest.go:19:13
   536  .  .  .  .  .  .  .  .  .  Kind: INT
   537  .  .  .  .  .  .  .  .  .  Value: "0"
   538  .  .  .  .  .  .  .  .  }
   539  .  .  .  .  .  .  .  }
   540  .  .  .  .  .  .  }
   541  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   542  .  .  .  .  .  .  .  X: *ast.Ident {
   543  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:19:16
   544  .  .  .  .  .  .  .  .  Name: "j"
   545  .  .  .  .  .  .  .  .  Obj: *(obj @ 524)
   546  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  OpPos: UnitTest.go:19:18
   548  .  .  .  .  .  .  .  Op: <
   549  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   550  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   551  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:19:20
   552  .  .  .  .  .  .  .  .  .  Name: "len"
   553  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  Lparen: UnitTest.go:19:23
   555  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   556  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   557  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:19:24
   558  .  .  .  .  .  .  .  .  .  .  Name: "s"
   559  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   560  .  .  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  .  Ellipsis: -
   563  .  .  .  .  .  .  .  .  Rparen: UnitTest.go:19:25
   564  .  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  }
   566  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   567  .  .  .  .  .  .  .  X: *ast.Ident {
   568  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:19:28
   569  .  .  .  .  .  .  .  .  Name: "j"
   570  .  .  .  .  .  .  .  .  Obj: *(obj @ 524)
   571  .  .  .  .  .  .  .  }
   572  .  .  .  .  .  .  .  TokPos: UnitTest.go:19:29
   573  .  .  .  .  .  .  .  Tok: ++
   574  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  Body: *ast.BlockStmt {
   576  .  .  .  .  .  .  .  Lbrace: UnitTest.go:19:32
   577  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   578  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   579  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   580  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   581  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:20:3
   582  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   583  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 44)
   584  .  .  .  .  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  .  .  TokPos: UnitTest.go:20:10
   587  .  .  .  .  .  .  .  .  .  Tok: +=
   588  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   589  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   590  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   591  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:20:13
   592  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   593  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   594  .  .  .  .  .  .  .  .  .  .  .  }
   595  .  .  .  .  .  .  .  .  .  .  .  Lbrack: UnitTest.go:20:14
   596  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   597  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:20:15
   598  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   599  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 524)
   600  .  .  .  .  .  .  .  .  .  .  .  }
   601  .  .  .  .  .  .  .  .  .  .  .  Rbrack: UnitTest.go:20:16
   602  .  .  .  .  .  .  .  .  .  .  }
   603  .  .  .  .  .  .  .  .  .  }
   604  .  .  .  .  .  .  .  .  }
   605  .  .  .  .  .  .  .  }
   606  .  .  .  .  .  .  .  Rbrace: UnitTest.go:21:4
   607  .  .  .  .  .  .  }
   608  .  .  .  .  .  }
   609  .  .  .  .  .  10: *ast.ReturnStmt {
   610  .  .  .  .  .  .  Return: UnitTest.go:22:4
   611  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   612  .  .  .  .  .  .  .  0: *ast.Ident {
   613  .  .  .  .  .  .  .  .  NamePos: UnitTest.go:22:11
   614  .  .  .  .  .  .  .  .  Name: "result"
   615  .  .  .  .  .  .  .  .  Obj: *(obj @ 44)
   616  .  .  .  .  .  .  .  }
   617  .  .  .  .  .  .  }
   618  .  .  .  .  .  }
   619  .  .  .  .  }
   620  .  .  .  .  Rbrace: UnitTest.go:23:1
   621  .  .  .  }
   622  .  .  }
   623  .  }
   624  .  Scope: *ast.Scope {
   625  .  .  Objects: map[string]*ast.Object (len = 1) {
   626  .  .  .  "main": *(obj @ 11)
   627  .  .  }
   628  .  }
   629  .  Unresolved: []*ast.Ident (len = 6) {
   630  .  .  0: *(obj @ 27)
   631  .  .  1: *(obj @ 84)
   632  .  .  2: *(obj @ 191)
   633  .  .  3: *(obj @ 311)
   634  .  .  4: *(obj @ 431)
   635  .  .  5: *(obj @ 550)
   636  .  }
   637  }
