     0  *ast.File {
     1  .  Package: 1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: 3:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  Kind: func
    13  .  .  .  .  .  Name: "main"
    14  .  .  .  .  .  Decl: *(obj @ 7)
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  Func: 3:1
    19  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  Opening: 3:10
    21  .  .  .  .  .  Closing: 3:11
    22  .  .  .  .  }
    23  .  .  .  }
    24  .  .  .  Body: *ast.BlockStmt {
    25  .  .  .  .  Lbrace: 3:13
    26  .  .  .  .  List: []ast.Stmt (len = 8) {
    27  .  .  .  .  .  0: *ast.DeclStmt {
    28  .  .  .  .  .  .  Decl: *ast.GenDecl {
    29  .  .  .  .  .  .  .  TokPos: 4:5
    30  .  .  .  .  .  .  .  Tok: var
    31  .  .  .  .  .  .  .  Lparen: -
    32  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    33  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    34  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    35  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    36  .  .  .  .  .  .  .  .  .  .  .  NamePos: 4:9
    37  .  .  .  .  .  .  .  .  .  .  .  Name: "f"
    38  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    39  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    40  .  .  .  .  .  .  .  .  .  .  .  .  Name: "f"
    41  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 33)
    42  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    43  .  .  .  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    47  .  .  .  .  .  .  .  .  .  .  NamePos: 4:11
    48  .  .  .  .  .  .  .  .  .  .  Name: "string"
    49  .  .  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    51  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    52  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
    53  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 4:20
    54  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
    55  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Hello \\nvariable\""
    56  .  .  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  .  .  OpPos: 4:39
    58  .  .  .  .  .  .  .  .  .  .  .  Op: +
    59  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    60  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 4:41
    61  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
    62  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\" test\""
    63  .  .  .  .  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  Rparen: -
    69  .  .  .  .  .  .  }
    70  .  .  .  .  .  }
    71  .  .  .  .  .  1: *ast.ExprStmt {
    72  .  .  .  .  .  .  X: *ast.CallExpr {
    73  .  .  .  .  .  .  .  Fun: *ast.Ident {
    74  .  .  .  .  .  .  .  .  NamePos: 5:5
    75  .  .  .  .  .  .  .  .  Name: "println"
    76  .  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  .  Lparen: 5:12
    78  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    79  .  .  .  .  .  .  .  .  0: *ast.Ident {
    80  .  .  .  .  .  .  .  .  .  NamePos: 5:13
    81  .  .  .  .  .  .  .  .  .  Name: "f"
    82  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 38)
    83  .  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  Ellipsis: -
    86  .  .  .  .  .  .  .  Rparen: 5:14
    87  .  .  .  .  .  .  }
    88  .  .  .  .  .  }
    89  .  .  .  .  .  2: *ast.DeclStmt {
    90  .  .  .  .  .  .  Decl: *ast.GenDecl {
    91  .  .  .  .  .  .  .  TokPos: 7:5
    92  .  .  .  .  .  .  .  Tok: var
    93  .  .  .  .  .  .  .  Lparen: -
    94  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    95  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    96  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    97  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    98  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:9
    99  .  .  .  .  .  .  .  .  .  .  .  Name: "z"
   100  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   101  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   102  .  .  .  .  .  .  .  .  .  .  .  .  Name: "z"
   103  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 95)
   104  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   105  .  .  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   109  .  .  .  .  .  .  .  .  .  .  NamePos: 7:11
   110  .  .  .  .  .  .  .  .  .  .  Name: "string"
   111  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   113  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   114  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 7:20
   115  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   116  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   117  .  .  .  .  .  .  .  .  .  .  }
   118  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  Rparen: -
   122  .  .  .  .  .  .  }
   123  .  .  .  .  .  }
   124  .  .  .  .  .  3: *ast.ExprStmt {
   125  .  .  .  .  .  .  X: *ast.CallExpr {
   126  .  .  .  .  .  .  .  Fun: *ast.Ident {
   127  .  .  .  .  .  .  .  .  NamePos: 8:5
   128  .  .  .  .  .  .  .  .  Name: "println"
   129  .  .  .  .  .  .  .  }
   130  .  .  .  .  .  .  .  Lparen: 8:12
   131  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   132  .  .  .  .  .  .  .  .  0: *ast.Ident {
   133  .  .  .  .  .  .  .  .  .  NamePos: 8:13
   134  .  .  .  .  .  .  .  .  .  Name: "z"
   135  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 100)
   136  .  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  Ellipsis: -
   139  .  .  .  .  .  .  .  Rparen: 8:14
   140  .  .  .  .  .  .  }
   141  .  .  .  .  .  }
   142  .  .  .  .  .  4: *ast.DeclStmt {
   143  .  .  .  .  .  .  Decl: *ast.GenDecl {
   144  .  .  .  .  .  .  .  TokPos: 10:5
   145  .  .  .  .  .  .  .  Tok: var
   146  .  .  .  .  .  .  .  Lparen: -
   147  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   148  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   149  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   150  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   151  .  .  .  .  .  .  .  .  .  .  .  NamePos: 10:9
   152  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   153  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   154  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   155  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   156  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 148)
   157  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   158  .  .  .  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  .  }
   161  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   162  .  .  .  .  .  .  .  .  .  .  NamePos: 10:11
   163  .  .  .  .  .  .  .  .  .  .  Name: "float"
   164  .  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   166  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   167  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 10:19
   168  .  .  .  .  .  .  .  .  .  .  .  Kind: FLOAT
   169  .  .  .  .  .  .  .  .  .  .  .  Value: "22.5"
   170  .  .  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  .  }
   173  .  .  .  .  .  .  .  }
   174  .  .  .  .  .  .  .  Rparen: -
   175  .  .  .  .  .  .  }
   176  .  .  .  .  .  }
   177  .  .  .  .  .  5: *ast.ExprStmt {
   178  .  .  .  .  .  .  X: *ast.CallExpr {
   179  .  .  .  .  .  .  .  Fun: *ast.Ident {
   180  .  .  .  .  .  .  .  .  NamePos: 11:5
   181  .  .  .  .  .  .  .  .  Name: "println"
   182  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  Lparen: 11:12
   184  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   185  .  .  .  .  .  .  .  .  0: *ast.Ident {
   186  .  .  .  .  .  .  .  .  .  NamePos: 11:13
   187  .  .  .  .  .  .  .  .  .  Name: "x"
   188  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 153)
   189  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  Ellipsis: -
   192  .  .  .  .  .  .  .  Rparen: 11:14
   193  .  .  .  .  .  .  }
   194  .  .  .  .  .  }
   195  .  .  .  .  .  6: *ast.DeclStmt {
   196  .  .  .  .  .  .  Decl: *ast.GenDecl {
   197  .  .  .  .  .  .  .  TokPos: 13:5
   198  .  .  .  .  .  .  .  Tok: var
   199  .  .  .  .  .  .  .  Lparen: -
   200  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   201  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   202  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   203  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   204  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:9
   205  .  .  .  .  .  .  .  .  .  .  .  Name: "y"
   206  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   207  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   208  .  .  .  .  .  .  .  .  .  .  .  .  Name: "y"
   209  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 201)
   210  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   211  .  .  .  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   215  .  .  .  .  .  .  .  .  .  .  NamePos: 13:11
   216  .  .  .  .  .  .  .  .  .  .  Name: "bool"
   217  .  .  .  .  .  .  .  .  .  }
   218  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   219  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   220  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   221  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:18
   222  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   223  .  .  .  .  .  .  .  .  .  .  .  .  Value: "1"
   224  .  .  .  .  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  .  .  .  .  OpPos: 13:20
   226  .  .  .  .  .  .  .  .  .  .  .  Op: <
   227  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   228  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:22
   229  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   230  .  .  .  .  .  .  .  .  .  .  .  .  Value: "2"
   231  .  .  .  .  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  }
   235  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  .  Rparen: -
   237  .  .  .  .  .  .  }
   238  .  .  .  .  .  }
   239  .  .  .  .  .  7: *ast.ExprStmt {
   240  .  .  .  .  .  .  X: *ast.CallExpr {
   241  .  .  .  .  .  .  .  Fun: *ast.Ident {
   242  .  .  .  .  .  .  .  .  NamePos: 14:9
   243  .  .  .  .  .  .  .  .  Name: "println"
   244  .  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  .  Lparen: 14:16
   246  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   247  .  .  .  .  .  .  .  .  0: *ast.Ident {
   248  .  .  .  .  .  .  .  .  .  NamePos: 14:17
   249  .  .  .  .  .  .  .  .  .  Name: "y"
   250  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 206)
   251  .  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  .  Ellipsis: -
   254  .  .  .  .  .  .  .  Rparen: 14:18
   255  .  .  .  .  .  .  }
   256  .  .  .  .  .  }
   257  .  .  .  .  }
   258  .  .  .  .  Rbrace: 15:1
   259  .  .  .  }
   260  .  .  }
   261  .  }
   262  .  Scope: *ast.Scope {
   263  .  .  Objects: map[string]*ast.Object (len = 1) {
   264  .  .  .  "main": *(obj @ 11)
   265  .  .  }
   266  .  }
   267  .  Unresolved: []*ast.Ident (len = 8) {
   268  .  .  0: *(obj @ 46)
   269  .  .  1: *(obj @ 73)
   270  .  .  2: *(obj @ 108)
   271  .  .  3: *(obj @ 126)
   272  .  .  4: *(obj @ 161)
   273  .  .  5: *(obj @ 179)
   274  .  .  6: *(obj @ 214)
   275  .  .  7: *(obj @ 241)
   276  .  }
   277  }