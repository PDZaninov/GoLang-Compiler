     0  *ast.File {
     1  .  Package: 2:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 2:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: 6:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  }
    12  .  .  .  Type: *ast.FuncType {
    13  .  .  .  .  Func: 6:1
    14  .  .  .  .  Params: *ast.FieldList {
    15  .  .  .  .  .  Opening: 6:10
    16  .  .  .  .  .  Closing: 6:11
    17  .  .  .  .  }
    18  .  .  .  }
    19  .  .  .  Body: *ast.BlockStmt {
    20  .  .  .  .  Lbrace: 6:13
    21  .  .  .  .  List: []ast.Stmt (len = 39) {
    22  .  .  .  .  .  0: *ast.ExprStmt {
    23  .  .  .  .  .  .  X: *ast.CallExpr {
    24  .  .  .  .  .  .  .  Fun: *ast.Ident {
    25  .  .  .  .  .  .  .  .  NamePos: 7:2
    26  .  .  .  .  .  .  .  .  Name: "println"
    27  .  .  .  .  .  .  .  }
    28  .  .  .  .  .  .  .  Lparen: 7:9
    29  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    30  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    31  .  .  .  .  .  .  .  .  .  ValuePos: 7:10
    32  .  .  .  .  .  .  .  .  .  Kind: STRING
    33  .  .  .  .  .  .  .  .  .  Value: "\"True\""
    34  .  .  .  .  .  .  .  .  }
    35  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  .  Ellipsis: -
    37  .  .  .  .  .  .  .  Rparen: 7:16
    38  .  .  .  .  .  .  }
    39  .  .  .  .  .  }
    40  .  .  .  .  .  1: *ast.ExprStmt {
    41  .  .  .  .  .  .  X: *ast.CallExpr {
    42  .  .  .  .  .  .  .  Fun: *ast.Ident {
    43  .  .  .  .  .  .  .  .  NamePos: 8:2
    44  .  .  .  .  .  .  .  .  Name: "println"
    45  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  Lparen: 8:9
    47  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    48  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    49  .  .  .  .  .  .  .  .  .  ValuePos: 8:10
    50  .  .  .  .  .  .  .  .  .  Kind: STRING
    51  .  .  .  .  .  .  .  .  .  Value: "\"1<2 \""
    52  .  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  .  Ellipsis: -
    55  .  .  .  .  .  .  .  Rparen: 8:16
    56  .  .  .  .  .  .  }
    57  .  .  .  .  .  }
    58  .  .  .  .  .  2: *ast.ExprStmt {
    59  .  .  .  .  .  .  X: *ast.CallExpr {
    60  .  .  .  .  .  .  .  Fun: *ast.Ident {
    61  .  .  .  .  .  .  .  .  NamePos: 9:2
    62  .  .  .  .  .  .  .  .  Name: "println"
    63  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  Lparen: 9:9
    65  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    66  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    67  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
    68  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:10
    69  .  .  .  .  .  .  .  .  .  .  Kind: INT
    70  .  .  .  .  .  .  .  .  .  .  Value: "1"
    71  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  OpPos: 9:11
    73  .  .  .  .  .  .  .  .  .  Op: <
    74  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    75  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:12
    76  .  .  .  .  .  .  .  .  .  .  Kind: INT
    77  .  .  .  .  .  .  .  .  .  .  Value: "2"
    78  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  Ellipsis: -
    82  .  .  .  .  .  .  .  Rparen: 9:13
    83  .  .  .  .  .  .  }
    84  .  .  .  .  .  }
    85  .  .  .  .  .  3: *ast.ExprStmt {
    86  .  .  .  .  .  .  X: *ast.CallExpr {
    87  .  .  .  .  .  .  .  Fun: *ast.Ident {
    88  .  .  .  .  .  .  .  .  NamePos: 10:2
    89  .  .  .  .  .  .  .  .  Name: "println"
    90  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  Lparen: 10:9
    92  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    93  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    94  .  .  .  .  .  .  .  .  .  ValuePos: 10:10
    95  .  .  .  .  .  .  .  .  .  Kind: STRING
    96  .  .  .  .  .  .  .  .  .  Value: "\"1<=2 \""
    97  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  Ellipsis: -
   100  .  .  .  .  .  .  .  Rparen: 10:17
   101  .  .  .  .  .  .  }
   102  .  .  .  .  .  }
   103  .  .  .  .  .  4: *ast.ExprStmt {
   104  .  .  .  .  .  .  X: *ast.CallExpr {
   105  .  .  .  .  .  .  .  Fun: *ast.Ident {
   106  .  .  .  .  .  .  .  .  NamePos: 11:2
   107  .  .  .  .  .  .  .  .  Name: "println"
   108  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  .  Lparen: 11:9
   110  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   111  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   112  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   113  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:10
   114  .  .  .  .  .  .  .  .  .  .  Kind: INT
   115  .  .  .  .  .  .  .  .  .  .  Value: "1"
   116  .  .  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  .  .  OpPos: 11:11
   118  .  .  .  .  .  .  .  .  .  Op: <=
   119  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   120  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:13
   121  .  .  .  .  .  .  .  .  .  .  Kind: INT
   122  .  .  .  .  .  .  .  .  .  .  Value: "2"
   123  .  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  .  }
   125  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  Ellipsis: -
   127  .  .  .  .  .  .  .  Rparen: 11:14
   128  .  .  .  .  .  .  }
   129  .  .  .  .  .  }
   130  .  .  .  .  .  5: *ast.ExprStmt {
   131  .  .  .  .  .  .  X: *ast.CallExpr {
   132  .  .  .  .  .  .  .  Fun: *ast.Ident {
   133  .  .  .  .  .  .  .  .  NamePos: 12:2
   134  .  .  .  .  .  .  .  .  Name: "println"
   135  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  Lparen: 12:9
   137  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   138  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   139  .  .  .  .  .  .  .  .  .  ValuePos: 12:10
   140  .  .  .  .  .  .  .  .  .  Kind: STRING
   141  .  .  .  .  .  .  .  .  .  Value: "\"2<=2 \""
   142  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  Ellipsis: -
   145  .  .  .  .  .  .  .  Rparen: 12:17
   146  .  .  .  .  .  .  }
   147  .  .  .  .  .  }
   148  .  .  .  .  .  6: *ast.ExprStmt {
   149  .  .  .  .  .  .  X: *ast.CallExpr {
   150  .  .  .  .  .  .  .  Fun: *ast.Ident {
   151  .  .  .  .  .  .  .  .  NamePos: 13:2
   152  .  .  .  .  .  .  .  .  Name: "println"
   153  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  Lparen: 13:9
   155  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   156  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   157  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   158  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:10
   159  .  .  .  .  .  .  .  .  .  .  Kind: INT
   160  .  .  .  .  .  .  .  .  .  .  Value: "2"
   161  .  .  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  .  .  OpPos: 13:11
   163  .  .  .  .  .  .  .  .  .  Op: <=
   164  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   165  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:13
   166  .  .  .  .  .  .  .  .  .  .  Kind: INT
   167  .  .  .  .  .  .  .  .  .  .  Value: "2"
   168  .  .  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  Ellipsis: -
   172  .  .  .  .  .  .  .  Rparen: 13:14
   173  .  .  .  .  .  .  }
   174  .  .  .  .  .  }
   175  .  .  .  .  .  7: *ast.ExprStmt {
   176  .  .  .  .  .  .  X: *ast.CallExpr {
   177  .  .  .  .  .  .  .  Fun: *ast.Ident {
   178  .  .  .  .  .  .  .  .  NamePos: 14:2
   179  .  .  .  .  .  .  .  .  Name: "println"
   180  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  Lparen: 14:9
   182  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   183  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   184  .  .  .  .  .  .  .  .  .  ValuePos: 14:10
   185  .  .  .  .  .  .  .  .  .  Kind: STRING
   186  .  .  .  .  .  .  .  .  .  Value: "\"3>2 \""
   187  .  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  .  Ellipsis: -
   190  .  .  .  .  .  .  .  Rparen: 14:16
   191  .  .  .  .  .  .  }
   192  .  .  .  .  .  }
   193  .  .  .  .  .  8: *ast.ExprStmt {
   194  .  .  .  .  .  .  X: *ast.CallExpr {
   195  .  .  .  .  .  .  .  Fun: *ast.Ident {
   196  .  .  .  .  .  .  .  .  NamePos: 15:2
   197  .  .  .  .  .  .  .  .  Name: "println"
   198  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  Lparen: 15:9
   200  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   201  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   202  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   203  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:10
   204  .  .  .  .  .  .  .  .  .  .  Kind: INT
   205  .  .  .  .  .  .  .  .  .  .  Value: "3"
   206  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  .  OpPos: 15:11
   208  .  .  .  .  .  .  .  .  .  Op: >
   209  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   210  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:12
   211  .  .  .  .  .  .  .  .  .  .  Kind: INT
   212  .  .  .  .  .  .  .  .  .  .  Value: "2"
   213  .  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  Ellipsis: -
   217  .  .  .  .  .  .  .  Rparen: 15:13
   218  .  .  .  .  .  .  }
   219  .  .  .  .  .  }
   220  .  .  .  .  .  9: *ast.ExprStmt {
   221  .  .  .  .  .  .  X: *ast.CallExpr {
   222  .  .  .  .  .  .  .  Fun: *ast.Ident {
   223  .  .  .  .  .  .  .  .  NamePos: 16:2
   224  .  .  .  .  .  .  .  .  Name: "println"
   225  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  Lparen: 16:9
   227  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   228  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   229  .  .  .  .  .  .  .  .  .  ValuePos: 16:10
   230  .  .  .  .  .  .  .  .  .  Kind: STRING
   231  .  .  .  .  .  .  .  .  .  Value: "\"3>=2 \""
   232  .  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  Ellipsis: -
   235  .  .  .  .  .  .  .  Rparen: 16:17
   236  .  .  .  .  .  .  }
   237  .  .  .  .  .  }
   238  .  .  .  .  .  10: *ast.ExprStmt {
   239  .  .  .  .  .  .  X: *ast.CallExpr {
   240  .  .  .  .  .  .  .  Fun: *ast.Ident {
   241  .  .  .  .  .  .  .  .  NamePos: 17:2
   242  .  .  .  .  .  .  .  .  Name: "println"
   243  .  .  .  .  .  .  .  }
   244  .  .  .  .  .  .  .  Lparen: 17:9
   245  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   246  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   247  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   248  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:10
   249  .  .  .  .  .  .  .  .  .  .  Kind: INT
   250  .  .  .  .  .  .  .  .  .  .  Value: "3"
   251  .  .  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  .  .  .  OpPos: 17:11
   253  .  .  .  .  .  .  .  .  .  Op: >=
   254  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   255  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:13
   256  .  .  .  .  .  .  .  .  .  .  Kind: INT
   257  .  .  .  .  .  .  .  .  .  .  Value: "3"
   258  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  Ellipsis: -
   262  .  .  .  .  .  .  .  Rparen: 17:14
   263  .  .  .  .  .  .  }
   264  .  .  .  .  .  }
   265  .  .  .  .  .  11: *ast.ExprStmt {
   266  .  .  .  .  .  .  X: *ast.CallExpr {
   267  .  .  .  .  .  .  .  Fun: *ast.Ident {
   268  .  .  .  .  .  .  .  .  NamePos: 18:2
   269  .  .  .  .  .  .  .  .  Name: "println"
   270  .  .  .  .  .  .  .  }
   271  .  .  .  .  .  .  .  Lparen: 18:9
   272  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   273  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   274  .  .  .  .  .  .  .  .  .  ValuePos: 18:10
   275  .  .  .  .  .  .  .  .  .  Kind: STRING
   276  .  .  .  .  .  .  .  .  .  Value: "\"1==1 \""
   277  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  .  Ellipsis: -
   280  .  .  .  .  .  .  .  Rparen: 18:17
   281  .  .  .  .  .  .  }
   282  .  .  .  .  .  }
   283  .  .  .  .  .  12: *ast.ExprStmt {
   284  .  .  .  .  .  .  X: *ast.CallExpr {
   285  .  .  .  .  .  .  .  Fun: *ast.Ident {
   286  .  .  .  .  .  .  .  .  NamePos: 19:2
   287  .  .  .  .  .  .  .  .  Name: "println"
   288  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  Lparen: 19:9
   290  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   291  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   292  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   293  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:10
   294  .  .  .  .  .  .  .  .  .  .  Kind: INT
   295  .  .  .  .  .  .  .  .  .  .  Value: "1"
   296  .  .  .  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  .  .  .  OpPos: 19:11
   298  .  .  .  .  .  .  .  .  .  Op: ==
   299  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   300  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:13
   301  .  .  .  .  .  .  .  .  .  .  Kind: INT
   302  .  .  .  .  .  .  .  .  .  .  Value: "1"
   303  .  .  .  .  .  .  .  .  .  }
   304  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  Ellipsis: -
   307  .  .  .  .  .  .  .  Rparen: 19:14
   308  .  .  .  .  .  .  }
   309  .  .  .  .  .  }
   310  .  .  .  .  .  13: *ast.ExprStmt {
   311  .  .  .  .  .  .  X: *ast.CallExpr {
   312  .  .  .  .  .  .  .  Fun: *ast.Ident {
   313  .  .  .  .  .  .  .  .  NamePos: 20:2
   314  .  .  .  .  .  .  .  .  Name: "println"
   315  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  Lparen: 20:9
   317  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   318  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   319  .  .  .  .  .  .  .  .  .  ValuePos: 20:10
   320  .  .  .  .  .  .  .  .  .  Kind: STRING
   321  .  .  .  .  .  .  .  .  .  Value: "\"1!=2 \""
   322  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  Ellipsis: -
   325  .  .  .  .  .  .  .  Rparen: 20:17
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  }
   328  .  .  .  .  .  14: *ast.ExprStmt {
   329  .  .  .  .  .  .  X: *ast.CallExpr {
   330  .  .  .  .  .  .  .  Fun: *ast.Ident {
   331  .  .  .  .  .  .  .  .  NamePos: 21:2
   332  .  .  .  .  .  .  .  .  Name: "println"
   333  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  Lparen: 21:9
   335  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   336  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   337  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   338  .  .  .  .  .  .  .  .  .  .  ValuePos: 21:10
   339  .  .  .  .  .  .  .  .  .  .  Kind: INT
   340  .  .  .  .  .  .  .  .  .  .  Value: "1"
   341  .  .  .  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  .  .  .  OpPos: 21:11
   343  .  .  .  .  .  .  .  .  .  Op: !=
   344  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   345  .  .  .  .  .  .  .  .  .  .  ValuePos: 21:13
   346  .  .  .  .  .  .  .  .  .  .  Kind: INT
   347  .  .  .  .  .  .  .  .  .  .  Value: "2"
   348  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  Ellipsis: -
   352  .  .  .  .  .  .  .  Rparen: 21:14
   353  .  .  .  .  .  .  }
   354  .  .  .  .  .  }
   355  .  .  .  .  .  15: *ast.ExprStmt {
   356  .  .  .  .  .  .  X: *ast.CallExpr {
   357  .  .  .  .  .  .  .  Fun: *ast.Ident {
   358  .  .  .  .  .  .  .  .  NamePos: 22:2
   359  .  .  .  .  .  .  .  .  Name: "println"
   360  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  Lparen: 22:9
   362  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   363  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   364  .  .  .  .  .  .  .  .  .  ValuePos: 22:10
   365  .  .  .  .  .  .  .  .  .  Kind: STRING
   366  .  .  .  .  .  .  .  .  .  Value: "\"true&&true \""
   367  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  Ellipsis: -
   370  .  .  .  .  .  .  .  Rparen: 22:23
   371  .  .  .  .  .  .  }
   372  .  .  .  .  .  }
   373  .  .  .  .  .  16: *ast.ExprStmt {
   374  .  .  .  .  .  .  X: *ast.CallExpr {
   375  .  .  .  .  .  .  .  Fun: *ast.Ident {
   376  .  .  .  .  .  .  .  .  NamePos: 23:2
   377  .  .  .  .  .  .  .  .  Name: "println"
   378  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  .  Lparen: 23:9
   380  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   381  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   382  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   383  .  .  .  .  .  .  .  .  .  .  NamePos: 23:10
   384  .  .  .  .  .  .  .  .  .  .  Name: "true"
   385  .  .  .  .  .  .  .  .  .  }
   386  .  .  .  .  .  .  .  .  .  OpPos: 23:14
   387  .  .  .  .  .  .  .  .  .  Op: &&
   388  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   389  .  .  .  .  .  .  .  .  .  .  NamePos: 23:16
   390  .  .  .  .  .  .  .  .  .  .  Name: "true"
   391  .  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  .  }
   394  .  .  .  .  .  .  .  Ellipsis: -
   395  .  .  .  .  .  .  .  Rparen: 23:20
   396  .  .  .  .  .  .  }
   397  .  .  .  .  .  }
   398  .  .  .  .  .  17: *ast.ExprStmt {
   399  .  .  .  .  .  .  X: *ast.CallExpr {
   400  .  .  .  .  .  .  .  Fun: *ast.Ident {
   401  .  .  .  .  .  .  .  .  NamePos: 24:2
   402  .  .  .  .  .  .  .  .  Name: "println"
   403  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  .  Lparen: 24:9
   405  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   406  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   407  .  .  .  .  .  .  .  .  .  ValuePos: 24:10
   408  .  .  .  .  .  .  .  .  .  Kind: STRING
   409  .  .  .  .  .  .  .  .  .  Value: "\"true||false \""
   410  .  .  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  .  Ellipsis: -
   413  .  .  .  .  .  .  .  Rparen: 24:24
   414  .  .  .  .  .  .  }
   415  .  .  .  .  .  }
   416  .  .  .  .  .  18: *ast.ExprStmt {
   417  .  .  .  .  .  .  X: *ast.CallExpr {
   418  .  .  .  .  .  .  .  Fun: *ast.Ident {
   419  .  .  .  .  .  .  .  .  NamePos: 25:2
   420  .  .  .  .  .  .  .  .  Name: "println"
   421  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  Lparen: 25:9
   423  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   424  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   425  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   426  .  .  .  .  .  .  .  .  .  .  NamePos: 25:10
   427  .  .  .  .  .  .  .  .  .  .  Name: "true"
   428  .  .  .  .  .  .  .  .  .  }
   429  .  .  .  .  .  .  .  .  .  OpPos: 25:14
   430  .  .  .  .  .  .  .  .  .  Op: ||
   431  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   432  .  .  .  .  .  .  .  .  .  .  NamePos: 25:16
   433  .  .  .  .  .  .  .  .  .  .  Name: "false"
   434  .  .  .  .  .  .  .  .  .  }
   435  .  .  .  .  .  .  .  .  }
   436  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  Ellipsis: -
   438  .  .  .  .  .  .  .  Rparen: 25:21
   439  .  .  .  .  .  .  }
   440  .  .  .  .  .  }
   441  .  .  .  .  .  19: *ast.ExprStmt {
   442  .  .  .  .  .  .  X: *ast.CallExpr {
   443  .  .  .  .  .  .  .  Fun: *ast.Ident {
   444  .  .  .  .  .  .  .  .  NamePos: 26:2
   445  .  .  .  .  .  .  .  .  Name: "println"
   446  .  .  .  .  .  .  .  }
   447  .  .  .  .  .  .  .  Lparen: 26:9
   448  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   449  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   450  .  .  .  .  .  .  .  .  .  ValuePos: 26:10
   451  .  .  .  .  .  .  .  .  .  Kind: STRING
   452  .  .  .  .  .  .  .  .  .  Value: "\"False\""
   453  .  .  .  .  .  .  .  .  }
   454  .  .  .  .  .  .  .  }
   455  .  .  .  .  .  .  .  Ellipsis: -
   456  .  .  .  .  .  .  .  Rparen: 26:17
   457  .  .  .  .  .  .  }
   458  .  .  .  .  .  }
   459  .  .  .  .  .  20: *ast.ExprStmt {
   460  .  .  .  .  .  .  X: *ast.CallExpr {
   461  .  .  .  .  .  .  .  Fun: *ast.Ident {
   462  .  .  .  .  .  .  .  .  NamePos: 27:2
   463  .  .  .  .  .  .  .  .  Name: "println"
   464  .  .  .  .  .  .  .  }
   465  .  .  .  .  .  .  .  Lparen: 27:9
   466  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   467  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   468  .  .  .  .  .  .  .  .  .  ValuePos: 27:10
   469  .  .  .  .  .  .  .  .  .  Kind: STRING
   470  .  .  .  .  .  .  .  .  .  Value: "\"2<2 \""
   471  .  .  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  .  }
   473  .  .  .  .  .  .  .  Ellipsis: -
   474  .  .  .  .  .  .  .  Rparen: 27:16
   475  .  .  .  .  .  .  }
   476  .  .  .  .  .  }
   477  .  .  .  .  .  21: *ast.ExprStmt {
   478  .  .  .  .  .  .  X: *ast.CallExpr {
   479  .  .  .  .  .  .  .  Fun: *ast.Ident {
   480  .  .  .  .  .  .  .  .  NamePos: 28:2
   481  .  .  .  .  .  .  .  .  Name: "println"
   482  .  .  .  .  .  .  .  }
   483  .  .  .  .  .  .  .  Lparen: 28:9
   484  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   485  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   486  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   487  .  .  .  .  .  .  .  .  .  .  ValuePos: 28:10
   488  .  .  .  .  .  .  .  .  .  .  Kind: INT
   489  .  .  .  .  .  .  .  .  .  .  Value: "2"
   490  .  .  .  .  .  .  .  .  .  }
   491  .  .  .  .  .  .  .  .  .  OpPos: 28:11
   492  .  .  .  .  .  .  .  .  .  Op: <
   493  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   494  .  .  .  .  .  .  .  .  .  .  ValuePos: 28:12
   495  .  .  .  .  .  .  .  .  .  .  Kind: INT
   496  .  .  .  .  .  .  .  .  .  .  Value: "2"
   497  .  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  }
   499  .  .  .  .  .  .  .  }
   500  .  .  .  .  .  .  .  Ellipsis: -
   501  .  .  .  .  .  .  .  Rparen: 28:13
   502  .  .  .  .  .  .  }
   503  .  .  .  .  .  }
   504  .  .  .  .  .  22: *ast.ExprStmt {
   505  .  .  .  .  .  .  X: *ast.CallExpr {
   506  .  .  .  .  .  .  .  Fun: *ast.Ident {
   507  .  .  .  .  .  .  .  .  NamePos: 29:2
   508  .  .  .  .  .  .  .  .  Name: "println"
   509  .  .  .  .  .  .  .  }
   510  .  .  .  .  .  .  .  Lparen: 29:9
   511  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   512  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   513  .  .  .  .  .  .  .  .  .  ValuePos: 29:10
   514  .  .  .  .  .  .  .  .  .  Kind: STRING
   515  .  .  .  .  .  .  .  .  .  Value: "\"10<=2 \""
   516  .  .  .  .  .  .  .  .  }
   517  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  Ellipsis: -
   519  .  .  .  .  .  .  .  Rparen: 29:18
   520  .  .  .  .  .  .  }
   521  .  .  .  .  .  }
   522  .  .  .  .  .  23: *ast.ExprStmt {
   523  .  .  .  .  .  .  X: *ast.CallExpr {
   524  .  .  .  .  .  .  .  Fun: *ast.Ident {
   525  .  .  .  .  .  .  .  .  NamePos: 30:2
   526  .  .  .  .  .  .  .  .  Name: "println"
   527  .  .  .  .  .  .  .  }
   528  .  .  .  .  .  .  .  Lparen: 30:9
   529  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   530  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   531  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   532  .  .  .  .  .  .  .  .  .  .  ValuePos: 30:10
   533  .  .  .  .  .  .  .  .  .  .  Kind: INT
   534  .  .  .  .  .  .  .  .  .  .  Value: "10"
   535  .  .  .  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  .  .  .  OpPos: 30:12
   537  .  .  .  .  .  .  .  .  .  Op: <=
   538  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   539  .  .  .  .  .  .  .  .  .  .  ValuePos: 30:14
   540  .  .  .  .  .  .  .  .  .  .  Kind: INT
   541  .  .  .  .  .  .  .  .  .  .  Value: "2"
   542  .  .  .  .  .  .  .  .  .  }
   543  .  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  .  }
   545  .  .  .  .  .  .  .  Ellipsis: -
   546  .  .  .  .  .  .  .  Rparen: 30:15
   547  .  .  .  .  .  .  }
   548  .  .  .  .  .  }
   549  .  .  .  .  .  24: *ast.ExprStmt {
   550  .  .  .  .  .  .  X: *ast.CallExpr {
   551  .  .  .  .  .  .  .  Fun: *ast.Ident {
   552  .  .  .  .  .  .  .  .  NamePos: 31:2
   553  .  .  .  .  .  .  .  .  Name: "println"
   554  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  Lparen: 31:9
   556  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   557  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   558  .  .  .  .  .  .  .  .  .  ValuePos: 31:10
   559  .  .  .  .  .  .  .  .  .  Kind: STRING
   560  .  .  .  .  .  .  .  .  .  Value: "\"5<=2 \""
   561  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  }
   563  .  .  .  .  .  .  .  Ellipsis: -
   564  .  .  .  .  .  .  .  Rparen: 31:17
   565  .  .  .  .  .  .  }
   566  .  .  .  .  .  }
   567  .  .  .  .  .  25: *ast.ExprStmt {
   568  .  .  .  .  .  .  X: *ast.CallExpr {
   569  .  .  .  .  .  .  .  Fun: *ast.Ident {
   570  .  .  .  .  .  .  .  .  NamePos: 32:2
   571  .  .  .  .  .  .  .  .  Name: "println"
   572  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  Lparen: 32:9
   574  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   575  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   576  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   577  .  .  .  .  .  .  .  .  .  .  ValuePos: 32:10
   578  .  .  .  .  .  .  .  .  .  .  Kind: INT
   579  .  .  .  .  .  .  .  .  .  .  Value: "5"
   580  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  OpPos: 32:11
   582  .  .  .  .  .  .  .  .  .  Op: <=
   583  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   584  .  .  .  .  .  .  .  .  .  .  ValuePos: 32:13
   585  .  .  .  .  .  .  .  .  .  .  Kind: INT
   586  .  .  .  .  .  .  .  .  .  .  Value: "2"
   587  .  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  .  }
   590  .  .  .  .  .  .  .  Ellipsis: -
   591  .  .  .  .  .  .  .  Rparen: 32:14
   592  .  .  .  .  .  .  }
   593  .  .  .  .  .  }
   594  .  .  .  .  .  26: *ast.ExprStmt {
   595  .  .  .  .  .  .  X: *ast.CallExpr {
   596  .  .  .  .  .  .  .  Fun: *ast.Ident {
   597  .  .  .  .  .  .  .  .  NamePos: 33:2
   598  .  .  .  .  .  .  .  .  Name: "println"
   599  .  .  .  .  .  .  .  }
   600  .  .  .  .  .  .  .  Lparen: 33:9
   601  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   602  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   603  .  .  .  .  .  .  .  .  .  ValuePos: 33:10
   604  .  .  .  .  .  .  .  .  .  Kind: STRING
   605  .  .  .  .  .  .  .  .  .  Value: "\"1>2 \""
   606  .  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  .  Ellipsis: -
   609  .  .  .  .  .  .  .  Rparen: 33:16
   610  .  .  .  .  .  .  }
   611  .  .  .  .  .  }
   612  .  .  .  .  .  27: *ast.ExprStmt {
   613  .  .  .  .  .  .  X: *ast.CallExpr {
   614  .  .  .  .  .  .  .  Fun: *ast.Ident {
   615  .  .  .  .  .  .  .  .  NamePos: 34:2
   616  .  .  .  .  .  .  .  .  Name: "println"
   617  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  Lparen: 34:9
   619  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   620  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   621  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   622  .  .  .  .  .  .  .  .  .  .  ValuePos: 34:10
   623  .  .  .  .  .  .  .  .  .  .  Kind: INT
   624  .  .  .  .  .  .  .  .  .  .  Value: "1"
   625  .  .  .  .  .  .  .  .  .  }
   626  .  .  .  .  .  .  .  .  .  OpPos: 34:11
   627  .  .  .  .  .  .  .  .  .  Op: >
   628  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   629  .  .  .  .  .  .  .  .  .  .  ValuePos: 34:12
   630  .  .  .  .  .  .  .  .  .  .  Kind: INT
   631  .  .  .  .  .  .  .  .  .  .  Value: "2"
   632  .  .  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  .  .  }
   634  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  Ellipsis: -
   636  .  .  .  .  .  .  .  Rparen: 34:13
   637  .  .  .  .  .  .  }
   638  .  .  .  .  .  }
   639  .  .  .  .  .  28: *ast.ExprStmt {
   640  .  .  .  .  .  .  X: *ast.CallExpr {
   641  .  .  .  .  .  .  .  Fun: *ast.Ident {
   642  .  .  .  .  .  .  .  .  NamePos: 35:2
   643  .  .  .  .  .  .  .  .  Name: "println"
   644  .  .  .  .  .  .  .  }
   645  .  .  .  .  .  .  .  Lparen: 35:9
   646  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   647  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   648  .  .  .  .  .  .  .  .  .  ValuePos: 35:10
   649  .  .  .  .  .  .  .  .  .  Kind: STRING
   650  .  .  .  .  .  .  .  .  .  Value: "\"1>=3 \""
   651  .  .  .  .  .  .  .  .  }
   652  .  .  .  .  .  .  .  }
   653  .  .  .  .  .  .  .  Ellipsis: -
   654  .  .  .  .  .  .  .  Rparen: 35:17
   655  .  .  .  .  .  .  }
   656  .  .  .  .  .  }
   657  .  .  .  .  .  29: *ast.ExprStmt {
   658  .  .  .  .  .  .  X: *ast.CallExpr {
   659  .  .  .  .  .  .  .  Fun: *ast.Ident {
   660  .  .  .  .  .  .  .  .  NamePos: 36:2
   661  .  .  .  .  .  .  .  .  Name: "println"
   662  .  .  .  .  .  .  .  }
   663  .  .  .  .  .  .  .  Lparen: 36:9
   664  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   665  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   666  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   667  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:10
   668  .  .  .  .  .  .  .  .  .  .  Kind: INT
   669  .  .  .  .  .  .  .  .  .  .  Value: "1"
   670  .  .  .  .  .  .  .  .  .  }
   671  .  .  .  .  .  .  .  .  .  OpPos: 36:11
   672  .  .  .  .  .  .  .  .  .  Op: >=
   673  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   674  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:13
   675  .  .  .  .  .  .  .  .  .  .  Kind: INT
   676  .  .  .  .  .  .  .  .  .  .  Value: "3"
   677  .  .  .  .  .  .  .  .  .  }
   678  .  .  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  .  }
   680  .  .  .  .  .  .  .  Ellipsis: -
   681  .  .  .  .  .  .  .  Rparen: 36:14
   682  .  .  .  .  .  .  }
   683  .  .  .  .  .  }
   684  .  .  .  .  .  30: *ast.ExprStmt {
   685  .  .  .  .  .  .  X: *ast.CallExpr {
   686  .  .  .  .  .  .  .  Fun: *ast.Ident {
   687  .  .  .  .  .  .  .  .  NamePos: 37:2
   688  .  .  .  .  .  .  .  .  Name: "println"
   689  .  .  .  .  .  .  .  }
   690  .  .  .  .  .  .  .  Lparen: 37:9
   691  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   692  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   693  .  .  .  .  .  .  .  .  .  ValuePos: 37:10
   694  .  .  .  .  .  .  .  .  .  Kind: STRING
   695  .  .  .  .  .  .  .  .  .  Value: "\"1==2 \""
   696  .  .  .  .  .  .  .  .  }
   697  .  .  .  .  .  .  .  }
   698  .  .  .  .  .  .  .  Ellipsis: -
   699  .  .  .  .  .  .  .  Rparen: 37:17
   700  .  .  .  .  .  .  }
   701  .  .  .  .  .  }
   702  .  .  .  .  .  31: *ast.ExprStmt {
   703  .  .  .  .  .  .  X: *ast.CallExpr {
   704  .  .  .  .  .  .  .  Fun: *ast.Ident {
   705  .  .  .  .  .  .  .  .  NamePos: 38:2
   706  .  .  .  .  .  .  .  .  Name: "println"
   707  .  .  .  .  .  .  .  }
   708  .  .  .  .  .  .  .  Lparen: 38:9
   709  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   710  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   711  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   712  .  .  .  .  .  .  .  .  .  .  ValuePos: 38:10
   713  .  .  .  .  .  .  .  .  .  .  Kind: INT
   714  .  .  .  .  .  .  .  .  .  .  Value: "1"
   715  .  .  .  .  .  .  .  .  .  }
   716  .  .  .  .  .  .  .  .  .  OpPos: 38:11
   717  .  .  .  .  .  .  .  .  .  Op: ==
   718  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   719  .  .  .  .  .  .  .  .  .  .  ValuePos: 38:13
   720  .  .  .  .  .  .  .  .  .  .  Kind: INT
   721  .  .  .  .  .  .  .  .  .  .  Value: "2"
   722  .  .  .  .  .  .  .  .  .  }
   723  .  .  .  .  .  .  .  .  }
   724  .  .  .  .  .  .  .  }
   725  .  .  .  .  .  .  .  Ellipsis: -
   726  .  .  .  .  .  .  .  Rparen: 38:14
   727  .  .  .  .  .  .  }
   728  .  .  .  .  .  }
   729  .  .  .  .  .  32: *ast.ExprStmt {
   730  .  .  .  .  .  .  X: *ast.CallExpr {
   731  .  .  .  .  .  .  .  Fun: *ast.Ident {
   732  .  .  .  .  .  .  .  .  NamePos: 39:2
   733  .  .  .  .  .  .  .  .  Name: "println"
   734  .  .  .  .  .  .  .  }
   735  .  .  .  .  .  .  .  Lparen: 39:9
   736  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   737  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   738  .  .  .  .  .  .  .  .  .  ValuePos: 39:10
   739  .  .  .  .  .  .  .  .  .  Kind: STRING
   740  .  .  .  .  .  .  .  .  .  Value: "\"1!=1 \""
   741  .  .  .  .  .  .  .  .  }
   742  .  .  .  .  .  .  .  }
   743  .  .  .  .  .  .  .  Ellipsis: -
   744  .  .  .  .  .  .  .  Rparen: 39:17
   745  .  .  .  .  .  .  }
   746  .  .  .  .  .  }
   747  .  .  .  .  .  33: *ast.ExprStmt {
   748  .  .  .  .  .  .  X: *ast.CallExpr {
   749  .  .  .  .  .  .  .  Fun: *ast.Ident {
   750  .  .  .  .  .  .  .  .  NamePos: 40:2
   751  .  .  .  .  .  .  .  .  Name: "println"
   752  .  .  .  .  .  .  .  }
   753  .  .  .  .  .  .  .  Lparen: 40:9
   754  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   755  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   756  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   757  .  .  .  .  .  .  .  .  .  .  ValuePos: 40:10
   758  .  .  .  .  .  .  .  .  .  .  Kind: INT
   759  .  .  .  .  .  .  .  .  .  .  Value: "1"
   760  .  .  .  .  .  .  .  .  .  }
   761  .  .  .  .  .  .  .  .  .  OpPos: 40:11
   762  .  .  .  .  .  .  .  .  .  Op: !=
   763  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   764  .  .  .  .  .  .  .  .  .  .  ValuePos: 40:13
   765  .  .  .  .  .  .  .  .  .  .  Kind: INT
   766  .  .  .  .  .  .  .  .  .  .  Value: "1"
   767  .  .  .  .  .  .  .  .  .  }
   768  .  .  .  .  .  .  .  .  }
   769  .  .  .  .  .  .  .  }
   770  .  .  .  .  .  .  .  Ellipsis: -
   771  .  .  .  .  .  .  .  Rparen: 40:14
   772  .  .  .  .  .  .  }
   773  .  .  .  .  .  }
   774  .  .  .  .  .  34: *ast.ExprStmt {
   775  .  .  .  .  .  .  X: *ast.CallExpr {
   776  .  .  .  .  .  .  .  Fun: *ast.Ident {
   777  .  .  .  .  .  .  .  .  NamePos: 41:2
   778  .  .  .  .  .  .  .  .  Name: "println"
   779  .  .  .  .  .  .  .  }
   780  .  .  .  .  .  .  .  Lparen: 41:9
   781  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   782  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   783  .  .  .  .  .  .  .  .  .  ValuePos: 41:10
   784  .  .  .  .  .  .  .  .  .  Kind: STRING
   785  .  .  .  .  .  .  .  .  .  Value: "\"true&&false \""
   786  .  .  .  .  .  .  .  .  }
   787  .  .  .  .  .  .  .  }
   788  .  .  .  .  .  .  .  Ellipsis: -
   789  .  .  .  .  .  .  .  Rparen: 41:24
   790  .  .  .  .  .  .  }
   791  .  .  .  .  .  }
   792  .  .  .  .  .  35: *ast.ExprStmt {
   793  .  .  .  .  .  .  X: *ast.CallExpr {
   794  .  .  .  .  .  .  .  Fun: *ast.Ident {
   795  .  .  .  .  .  .  .  .  NamePos: 42:2
   796  .  .  .  .  .  .  .  .  Name: "println"
   797  .  .  .  .  .  .  .  }
   798  .  .  .  .  .  .  .  Lparen: 42:9
   799  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   800  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   801  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   802  .  .  .  .  .  .  .  .  .  .  NamePos: 42:10
   803  .  .  .  .  .  .  .  .  .  .  Name: "true"
   804  .  .  .  .  .  .  .  .  .  }
   805  .  .  .  .  .  .  .  .  .  OpPos: 42:14
   806  .  .  .  .  .  .  .  .  .  Op: &&
   807  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   808  .  .  .  .  .  .  .  .  .  .  NamePos: 42:16
   809  .  .  .  .  .  .  .  .  .  .  Name: "false"
   810  .  .  .  .  .  .  .  .  .  }
   811  .  .  .  .  .  .  .  .  }
   812  .  .  .  .  .  .  .  }
   813  .  .  .  .  .  .  .  Ellipsis: -
   814  .  .  .  .  .  .  .  Rparen: 42:21
   815  .  .  .  .  .  .  }
   816  .  .  .  .  .  }
   817  .  .  .  .  .  36: *ast.ExprStmt {
   818  .  .  .  .  .  .  X: *ast.CallExpr {
   819  .  .  .  .  .  .  .  Fun: *ast.Ident {
   820  .  .  .  .  .  .  .  .  NamePos: 43:2
   821  .  .  .  .  .  .  .  .  Name: "println"
   822  .  .  .  .  .  .  .  }
   823  .  .  .  .  .  .  .  Lparen: 43:9
   824  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   825  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   826  .  .  .  .  .  .  .  .  .  ValuePos: 43:10
   827  .  .  .  .  .  .  .  .  .  Kind: STRING
   828  .  .  .  .  .  .  .  .  .  Value: "\"false||false \""
   829  .  .  .  .  .  .  .  .  }
   830  .  .  .  .  .  .  .  }
   831  .  .  .  .  .  .  .  Ellipsis: -
   832  .  .  .  .  .  .  .  Rparen: 43:25
   833  .  .  .  .  .  .  }
   834  .  .  .  .  .  }
   835  .  .  .  .  .  37: *ast.ExprStmt {
   836  .  .  .  .  .  .  X: *ast.CallExpr {
   837  .  .  .  .  .  .  .  Fun: *ast.Ident {
   838  .  .  .  .  .  .  .  .  NamePos: 44:2
   839  .  .  .  .  .  .  .  .  Name: "println"
   840  .  .  .  .  .  .  .  }
   841  .  .  .  .  .  .  .  Lparen: 44:9
   842  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   843  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   844  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   845  .  .  .  .  .  .  .  .  .  .  NamePos: 44:10
   846  .  .  .  .  .  .  .  .  .  .  Name: "false"
   847  .  .  .  .  .  .  .  .  .  }
   848  .  .  .  .  .  .  .  .  .  OpPos: 44:15
   849  .  .  .  .  .  .  .  .  .  Op: ||
   850  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   851  .  .  .  .  .  .  .  .  .  .  NamePos: 44:17
   852  .  .  .  .  .  .  .  .  .  .  Name: "false"
   853  .  .  .  .  .  .  .  .  .  }
   854  .  .  .  .  .  .  .  .  }
   855  .  .  .  .  .  .  .  }
   856  .  .  .  .  .  .  .  Ellipsis: -
   857  .  .  .  .  .  .  .  Rparen: 44:22
   858  .  .  .  .  .  .  }
   859  .  .  .  .  .  }
   860  .  .  .  .  .  38: *ast.ExprStmt {
   861  .  .  .  .  .  .  X: *ast.CallExpr {
   862  .  .  .  .  .  .  .  Fun: *ast.Ident {
   863  .  .  .  .  .  .  .  .  NamePos: 45:2
   864  .  .  .  .  .  .  .  .  Name: "println"
   865  .  .  .  .  .  .  .  }
   866  .  .  .  .  .  .  .  Lparen: 45:9
   867  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   868  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   869  .  .  .  .  .  .  .  .  .  ValuePos: 45:10
   870  .  .  .  .  .  .  .  .  .  Kind: STRING
   871  .  .  .  .  .  .  .  .  .  Value: "\"Done\""
   872  .  .  .  .  .  .  .  .  }
   873  .  .  .  .  .  .  .  }
   874  .  .  .  .  .  .  .  Ellipsis: -
   875  .  .  .  .  .  .  .  Rparen: 45:16
   876  .  .  .  .  .  .  }
   877  .  .  .  .  .  }
   878  .  .  .  .  }
   879  .  .  .  .  Rbrace: 47:1
   880  .  .  .  }
   881  .  .  }
   882  .  }
   883  .  Scope: *ast.Scope {
   884  .  .  Objects: map[string]*ast.Object (len = 1) {
   885  .  .  .  "main": *ast.Object {
   886  .  .  .  .  Kind: func
   887  .  .  .  .  Name: "main"
   888  .  .  .  .  Decl: *(obj @ 7)
   889  .  .  .  }
   890  .  .  }
   891  .  }
   892  .  Unresolved: []*ast.Ident (len = 47) {
   893  .  .  0: *(obj @ 24)
   894  .  .  1: *(obj @ 42)
   895  .  .  2: *(obj @ 60)
   896  .  .  3: *(obj @ 87)
   897  .  .  4: *(obj @ 105)
   898  .  .  5: *(obj @ 132)
   899  .  .  6: *(obj @ 150)
   900  .  .  7: *(obj @ 177)
   901  .  .  8: *(obj @ 195)
   902  .  .  9: *(obj @ 222)
   903  .  .  10: *(obj @ 240)
   904  .  .  11: *(obj @ 267)
   905  .  .  12: *(obj @ 285)
   906  .  .  13: *(obj @ 312)
   907  .  .  14: *(obj @ 330)
   908  .  .  15: *(obj @ 357)
   909  .  .  16: *(obj @ 375)
   910  .  .  17: *(obj @ 382)
   911  .  .  18: *(obj @ 388)
   912  .  .  19: *(obj @ 400)
   913  .  .  20: *(obj @ 418)
   914  .  .  21: *(obj @ 425)
   915  .  .  22: *(obj @ 431)
   916  .  .  23: *(obj @ 443)
   917  .  .  24: *(obj @ 461)
   918  .  .  25: *(obj @ 479)
   919  .  .  26: *(obj @ 506)
   920  .  .  27: *(obj @ 524)
   921  .  .  28: *(obj @ 551)
   922  .  .  29: *(obj @ 569)
   923  .  .  30: *(obj @ 596)
   924  .  .  31: *(obj @ 614)
   925  .  .  32: *(obj @ 641)
   926  .  .  33: *(obj @ 659)
   927  .  .  34: *(obj @ 686)
   928  .  .  35: *(obj @ 704)
   929  .  .  36: *(obj @ 731)
   930  .  .  37: *(obj @ 749)
   931  .  .  38: *(obj @ 776)
   932  .  .  39: *(obj @ 794)
   933  .  .  40: *(obj @ 801)
   934  .  .  41: *(obj @ 807)
   935  .  .  42: *(obj @ 819)
   936  .  .  43: *(obj @ 837)
   937  .  .  44: *(obj @ 844)
   938  .  .  45: *(obj @ 850)
   939  .  .  46: *(obj @ 862)
   940  .  }
   941  }
