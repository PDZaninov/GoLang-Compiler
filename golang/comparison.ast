     0  *ast.File {
     1  .  Package: 2:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 2:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: 6:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  }
    12  .  .  .  Type: *ast.FuncType {
    13  .  .  .  .  Func: 6:1
    14  .  .  .  .  Params: *ast.FieldList {
    15  .  .  .  .  .  Opening: 6:10
    16  .  .  .  .  .  Closing: 6:11
    17  .  .  .  .  }
    18  .  .  .  }
    19  .  .  .  Body: *ast.BlockStmt {
    20  .  .  .  .  Lbrace: 6:13
    21  .  .  .  .  List: []ast.Stmt (len = 15) {
    22  .  .  .  .  .  0: *ast.ExprStmt {
    23  .  .  .  .  .  .  X: *ast.CallExpr {
    24  .  .  .  .  .  .  .  Fun: *ast.Ident {
    25  .  .  .  .  .  .  .  .  NamePos: 7:2
    26  .  .  .  .  .  .  .  .  Name: "println"
    27  .  .  .  .  .  .  .  }
    28  .  .  .  .  .  .  .  Lparen: 7:9
    29  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    30  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    31  .  .  .  .  .  .  .  .  .  ValuePos: 7:10
    32  .  .  .  .  .  .  .  .  .  Kind: STRING
    33  .  .  .  .  .  .  .  .  .  Value: "\"True\""
    34  .  .  .  .  .  .  .  .  }
    35  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  .  Ellipsis: -
    37  .  .  .  .  .  .  .  Rparen: 7:16
    38  .  .  .  .  .  .  }
    39  .  .  .  .  .  }
    40  .  .  .  .  .  1: *ast.ExprStmt {
    41  .  .  .  .  .  .  X: *ast.CallExpr {
    42  .  .  .  .  .  .  .  Fun: *ast.Ident {
    43  .  .  .  .  .  .  .  .  NamePos: 8:2
    44  .  .  .  .  .  .  .  .  Name: "println"
    45  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  Lparen: 8:9
    47  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    48  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    49  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
    50  .  .  .  .  .  .  .  .  .  .  ValuePos: 8:10
    51  .  .  .  .  .  .  .  .  .  .  Kind: INT
    52  .  .  .  .  .  .  .  .  .  .  Value: "1"
    53  .  .  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  .  .  .  OpPos: 8:11
    55  .  .  .  .  .  .  .  .  .  Op: <
    56  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    57  .  .  .  .  .  .  .  .  .  .  ValuePos: 8:12
    58  .  .  .  .  .  .  .  .  .  .  Kind: INT
    59  .  .  .  .  .  .  .  .  .  .  Value: "2"
    60  .  .  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  .  Ellipsis: -
    64  .  .  .  .  .  .  .  Rparen: 8:13
    65  .  .  .  .  .  .  }
    66  .  .  .  .  .  }
    67  .  .  .  .  .  2: *ast.ExprStmt {
    68  .  .  .  .  .  .  X: *ast.CallExpr {
    69  .  .  .  .  .  .  .  Fun: *ast.Ident {
    70  .  .  .  .  .  .  .  .  NamePos: 9:2
    71  .  .  .  .  .  .  .  .  Name: "println"
    72  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  Lparen: 9:9
    74  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    75  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    76  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
    77  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:10
    78  .  .  .  .  .  .  .  .  .  .  Kind: INT
    79  .  .  .  .  .  .  .  .  .  .  Value: "1"
    80  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  OpPos: 9:11
    82  .  .  .  .  .  .  .  .  .  Op: <=
    83  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    84  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:13
    85  .  .  .  .  .  .  .  .  .  .  Kind: INT
    86  .  .  .  .  .  .  .  .  .  .  Value: "2"
    87  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  Ellipsis: -
    91  .  .  .  .  .  .  .  Rparen: 9:14
    92  .  .  .  .  .  .  }
    93  .  .  .  .  .  }
    94  .  .  .  .  .  3: *ast.ExprStmt {
    95  .  .  .  .  .  .  X: *ast.CallExpr {
    96  .  .  .  .  .  .  .  Fun: *ast.Ident {
    97  .  .  .  .  .  .  .  .  NamePos: 10:2
    98  .  .  .  .  .  .  .  .  Name: "println"
    99  .  .  .  .  .  .  .  }
   100  .  .  .  .  .  .  .  Lparen: 10:9
   101  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   102  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   103  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   104  .  .  .  .  .  .  .  .  .  .  ValuePos: 10:10
   105  .  .  .  .  .  .  .  .  .  .  Kind: INT
   106  .  .  .  .  .  .  .  .  .  .  Value: "2"
   107  .  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  .  .  OpPos: 10:11
   109  .  .  .  .  .  .  .  .  .  Op: <=
   110  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   111  .  .  .  .  .  .  .  .  .  .  ValuePos: 10:13
   112  .  .  .  .  .  .  .  .  .  .  Kind: INT
   113  .  .  .  .  .  .  .  .  .  .  Value: "2"
   114  .  .  .  .  .  .  .  .  .  }
   115  .  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  Ellipsis: -
   118  .  .  .  .  .  .  .  Rparen: 10:14
   119  .  .  .  .  .  .  }
   120  .  .  .  .  .  }
   121  .  .  .  .  .  4: *ast.ExprStmt {
   122  .  .  .  .  .  .  X: *ast.CallExpr {
   123  .  .  .  .  .  .  .  Fun: *ast.Ident {
   124  .  .  .  .  .  .  .  .  NamePos: 11:2
   125  .  .  .  .  .  .  .  .  Name: "println"
   126  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  Lparen: 11:9
   128  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   129  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   130  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   131  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:10
   132  .  .  .  .  .  .  .  .  .  .  Kind: INT
   133  .  .  .  .  .  .  .  .  .  .  Value: "3"
   134  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  OpPos: 11:11
   136  .  .  .  .  .  .  .  .  .  Op: >
   137  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   138  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:12
   139  .  .  .  .  .  .  .  .  .  .  Kind: INT
   140  .  .  .  .  .  .  .  .  .  .  Value: "2"
   141  .  .  .  .  .  .  .  .  .  }
   142  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  Ellipsis: -
   145  .  .  .  .  .  .  .  Rparen: 11:13
   146  .  .  .  .  .  .  }
   147  .  .  .  .  .  }
   148  .  .  .  .  .  5: *ast.ExprStmt {
   149  .  .  .  .  .  .  X: *ast.CallExpr {
   150  .  .  .  .  .  .  .  Fun: *ast.Ident {
   151  .  .  .  .  .  .  .  .  NamePos: 12:2
   152  .  .  .  .  .  .  .  .  Name: "println"
   153  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  Lparen: 12:9
   155  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   156  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   157  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   158  .  .  .  .  .  .  .  .  .  .  ValuePos: 12:10
   159  .  .  .  .  .  .  .  .  .  .  Kind: INT
   160  .  .  .  .  .  .  .  .  .  .  Value: "3"
   161  .  .  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  .  .  OpPos: 12:11
   163  .  .  .  .  .  .  .  .  .  Op: >=
   164  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   165  .  .  .  .  .  .  .  .  .  .  ValuePos: 12:13
   166  .  .  .  .  .  .  .  .  .  .  Kind: INT
   167  .  .  .  .  .  .  .  .  .  .  Value: "3"
   168  .  .  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  Ellipsis: -
   172  .  .  .  .  .  .  .  Rparen: 12:14
   173  .  .  .  .  .  .  }
   174  .  .  .  .  .  }
   175  .  .  .  .  .  6: *ast.ExprStmt {
   176  .  .  .  .  .  .  X: *ast.CallExpr {
   177  .  .  .  .  .  .  .  Fun: *ast.Ident {
   178  .  .  .  .  .  .  .  .  NamePos: 13:2
   179  .  .  .  .  .  .  .  .  Name: "println"
   180  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  Lparen: 13:9
   182  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   183  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   184  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   185  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:10
   186  .  .  .  .  .  .  .  .  .  .  Kind: INT
   187  .  .  .  .  .  .  .  .  .  .  Value: "1"
   188  .  .  .  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  .  .  .  OpPos: 13:11
   190  .  .  .  .  .  .  .  .  .  Op: ==
   191  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   192  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:13
   193  .  .  .  .  .  .  .  .  .  .  Kind: INT
   194  .  .  .  .  .  .  .  .  .  .  Value: "1"
   195  .  .  .  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  .  }
   198  .  .  .  .  .  .  .  Ellipsis: -
   199  .  .  .  .  .  .  .  Rparen: 13:14
   200  .  .  .  .  .  .  }
   201  .  .  .  .  .  }
   202  .  .  .  .  .  7: *ast.ExprStmt {
   203  .  .  .  .  .  .  X: *ast.CallExpr {
   204  .  .  .  .  .  .  .  Fun: *ast.Ident {
   205  .  .  .  .  .  .  .  .  NamePos: 14:2
   206  .  .  .  .  .  .  .  .  Name: "println"
   207  .  .  .  .  .  .  .  }
   208  .  .  .  .  .  .  .  Lparen: 14:9
   209  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   210  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   211  .  .  .  .  .  .  .  .  .  ValuePos: 14:10
   212  .  .  .  .  .  .  .  .  .  Kind: STRING
   213  .  .  .  .  .  .  .  .  .  Value: "\"False\""
   214  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  Ellipsis: -
   217  .  .  .  .  .  .  .  Rparen: 14:17
   218  .  .  .  .  .  .  }
   219  .  .  .  .  .  }
   220  .  .  .  .  .  8: *ast.ExprStmt {
   221  .  .  .  .  .  .  X: *ast.CallExpr {
   222  .  .  .  .  .  .  .  Fun: *ast.Ident {
   223  .  .  .  .  .  .  .  .  NamePos: 15:2
   224  .  .  .  .  .  .  .  .  Name: "println"
   225  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  Lparen: 15:9
   227  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   228  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   229  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   230  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:10
   231  .  .  .  .  .  .  .  .  .  .  Kind: INT
   232  .  .  .  .  .  .  .  .  .  .  Value: "2"
   233  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  .  OpPos: 15:11
   235  .  .  .  .  .  .  .  .  .  Op: <
   236  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   237  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:12
   238  .  .  .  .  .  .  .  .  .  .  Kind: INT
   239  .  .  .  .  .  .  .  .  .  .  Value: "2"
   240  .  .  .  .  .  .  .  .  .  }
   241  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  Ellipsis: -
   244  .  .  .  .  .  .  .  Rparen: 15:13
   245  .  .  .  .  .  .  }
   246  .  .  .  .  .  }
   247  .  .  .  .  .  9: *ast.ExprStmt {
   248  .  .  .  .  .  .  X: *ast.CallExpr {
   249  .  .  .  .  .  .  .  Fun: *ast.Ident {
   250  .  .  .  .  .  .  .  .  NamePos: 16:2
   251  .  .  .  .  .  .  .  .  Name: "println"
   252  .  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  .  Lparen: 16:9
   254  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   255  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   256  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   257  .  .  .  .  .  .  .  .  .  .  ValuePos: 16:10
   258  .  .  .  .  .  .  .  .  .  .  Kind: INT
   259  .  .  .  .  .  .  .  .  .  .  Value: "10"
   260  .  .  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  .  .  OpPos: 16:12
   262  .  .  .  .  .  .  .  .  .  Op: <=
   263  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   264  .  .  .  .  .  .  .  .  .  .  ValuePos: 16:14
   265  .  .  .  .  .  .  .  .  .  .  Kind: INT
   266  .  .  .  .  .  .  .  .  .  .  Value: "2"
   267  .  .  .  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  }
   270  .  .  .  .  .  .  .  Ellipsis: -
   271  .  .  .  .  .  .  .  Rparen: 16:15
   272  .  .  .  .  .  .  }
   273  .  .  .  .  .  }
   274  .  .  .  .  .  10: *ast.ExprStmt {
   275  .  .  .  .  .  .  X: *ast.CallExpr {
   276  .  .  .  .  .  .  .  Fun: *ast.Ident {
   277  .  .  .  .  .  .  .  .  NamePos: 17:2
   278  .  .  .  .  .  .  .  .  Name: "println"
   279  .  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  .  Lparen: 17:9
   281  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   282  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   283  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   284  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:10
   285  .  .  .  .  .  .  .  .  .  .  Kind: INT
   286  .  .  .  .  .  .  .  .  .  .  Value: "5"
   287  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  OpPos: 17:11
   289  .  .  .  .  .  .  .  .  .  Op: <=
   290  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   291  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:13
   292  .  .  .  .  .  .  .  .  .  .  Kind: INT
   293  .  .  .  .  .  .  .  .  .  .  Value: "2"
   294  .  .  .  .  .  .  .  .  .  }
   295  .  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  .  Ellipsis: -
   298  .  .  .  .  .  .  .  Rparen: 17:14
   299  .  .  .  .  .  .  }
   300  .  .  .  .  .  }
   301  .  .  .  .  .  11: *ast.ExprStmt {
   302  .  .  .  .  .  .  X: *ast.CallExpr {
   303  .  .  .  .  .  .  .  Fun: *ast.Ident {
   304  .  .  .  .  .  .  .  .  NamePos: 18:2
   305  .  .  .  .  .  .  .  .  Name: "println"
   306  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  Lparen: 18:9
   308  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   309  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   310  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   311  .  .  .  .  .  .  .  .  .  .  ValuePos: 18:10
   312  .  .  .  .  .  .  .  .  .  .  Kind: INT
   313  .  .  .  .  .  .  .  .  .  .  Value: "1"
   314  .  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  .  .  OpPos: 18:11
   316  .  .  .  .  .  .  .  .  .  Op: >
   317  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   318  .  .  .  .  .  .  .  .  .  .  ValuePos: 18:12
   319  .  .  .  .  .  .  .  .  .  .  Kind: INT
   320  .  .  .  .  .  .  .  .  .  .  Value: "2"
   321  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  Ellipsis: -
   325  .  .  .  .  .  .  .  Rparen: 18:13
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  }
   328  .  .  .  .  .  12: *ast.ExprStmt {
   329  .  .  .  .  .  .  X: *ast.CallExpr {
   330  .  .  .  .  .  .  .  Fun: *ast.Ident {
   331  .  .  .  .  .  .  .  .  NamePos: 19:2
   332  .  .  .  .  .  .  .  .  Name: "println"
   333  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  Lparen: 19:9
   335  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   336  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   337  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   338  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:10
   339  .  .  .  .  .  .  .  .  .  .  Kind: INT
   340  .  .  .  .  .  .  .  .  .  .  Value: "1"
   341  .  .  .  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  .  .  .  OpPos: 19:11
   343  .  .  .  .  .  .  .  .  .  Op: >=
   344  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   345  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:13
   346  .  .  .  .  .  .  .  .  .  .  Kind: INT
   347  .  .  .  .  .  .  .  .  .  .  Value: "3"
   348  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  Ellipsis: -
   352  .  .  .  .  .  .  .  Rparen: 19:14
   353  .  .  .  .  .  .  }
   354  .  .  .  .  .  }
   355  .  .  .  .  .  13: *ast.ExprStmt {
   356  .  .  .  .  .  .  X: *ast.CallExpr {
   357  .  .  .  .  .  .  .  Fun: *ast.Ident {
   358  .  .  .  .  .  .  .  .  NamePos: 20:2
   359  .  .  .  .  .  .  .  .  Name: "println"
   360  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  Lparen: 20:9
   362  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   363  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   364  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   365  .  .  .  .  .  .  .  .  .  .  ValuePos: 20:10
   366  .  .  .  .  .  .  .  .  .  .  Kind: INT
   367  .  .  .  .  .  .  .  .  .  .  Value: "1"
   368  .  .  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  .  .  OpPos: 20:11
   370  .  .  .  .  .  .  .  .  .  Op: ==
   371  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   372  .  .  .  .  .  .  .  .  .  .  ValuePos: 20:13
   373  .  .  .  .  .  .  .  .  .  .  Kind: INT
   374  .  .  .  .  .  .  .  .  .  .  Value: "2"
   375  .  .  .  .  .  .  .  .  .  }
   376  .  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  Ellipsis: -
   379  .  .  .  .  .  .  .  Rparen: 20:14
   380  .  .  .  .  .  .  }
   381  .  .  .  .  .  }
   382  .  .  .  .  .  14: *ast.ExprStmt {
   383  .  .  .  .  .  .  X: *ast.CallExpr {
   384  .  .  .  .  .  .  .  Fun: *ast.Ident {
   385  .  .  .  .  .  .  .  .  NamePos: 21:2
   386  .  .  .  .  .  .  .  .  Name: "println"
   387  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  Lparen: 21:9
   389  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   390  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   391  .  .  .  .  .  .  .  .  .  ValuePos: 21:10
   392  .  .  .  .  .  .  .  .  .  Kind: STRING
   393  .  .  .  .  .  .  .  .  .  Value: "\"Done\""
   394  .  .  .  .  .  .  .  .  }
   395  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  .  Ellipsis: -
   397  .  .  .  .  .  .  .  Rparen: 21:16
   398  .  .  .  .  .  .  }
   399  .  .  .  .  .  }
   400  .  .  .  .  }
   401  .  .  .  .  Rbrace: 23:1
   402  .  .  .  }
   403  .  .  }
   404  .  }
   405  .  Scope: *ast.Scope {
   406  .  .  Objects: map[string]*ast.Object (len = 1) {
   407  .  .  .  "main": *ast.Object {
   408  .  .  .  .  Kind: func
   409  .  .  .  .  Name: "main"
   410  .  .  .  .  Decl: *(obj @ 7)
   411  .  .  .  }
   412  .  .  }
   413  .  }
   414  .  Unresolved: []*ast.Ident (len = 15) {
   415  .  .  0: *(obj @ 24)
   416  .  .  1: *(obj @ 42)
   417  .  .  2: *(obj @ 69)
   418  .  .  3: *(obj @ 96)
   419  .  .  4: *(obj @ 123)
   420  .  .  5: *(obj @ 150)
   421  .  .  6: *(obj @ 177)
   422  .  .  7: *(obj @ 204)
   423  .  .  8: *(obj @ 222)
   424  .  .  9: *(obj @ 249)
   425  .  .  10: *(obj @ 276)
   426  .  .  11: *(obj @ 303)
   427  .  .  12: *(obj @ 330)
   428  .  .  13: *(obj @ 357)
   429  .  .  14: *(obj @ 384)
   430  .  }
   431  }
