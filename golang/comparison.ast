     0  *ast.File {
     1  .  Package: 2:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 2:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: 6:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  }
    12  .  .  .  Type: *ast.FuncType {
    13  .  .  .  .  Func: 6:1
    14  .  .  .  .  Params: *ast.FieldList {
    15  .  .  .  .  .  Opening: 6:10
    16  .  .  .  .  .  Closing: 6:11
    17  .  .  .  .  }
    18  .  .  .  }
    19  .  .  .  Body: *ast.BlockStmt {
    20  .  .  .  .  Lbrace: 6:13
    21  .  .  .  .  List: []ast.Stmt (len = 27) {
    22  .  .  .  .  .  0: *ast.ExprStmt {
    23  .  .  .  .  .  .  X: *ast.CallExpr {
    24  .  .  .  .  .  .  .  Fun: *ast.Ident {
    25  .  .  .  .  .  .  .  .  NamePos: 7:2
    26  .  .  .  .  .  .  .  .  Name: "println"
    27  .  .  .  .  .  .  .  }
    28  .  .  .  .  .  .  .  Lparen: 7:9
    29  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    30  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    31  .  .  .  .  .  .  .  .  .  ValuePos: 7:10
    32  .  .  .  .  .  .  .  .  .  Kind: STRING
    33  .  .  .  .  .  .  .  .  .  Value: "\"True\""
    34  .  .  .  .  .  .  .  .  }
    35  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  .  Ellipsis: -
    37  .  .  .  .  .  .  .  Rparen: 7:16
    38  .  .  .  .  .  .  }
    39  .  .  .  .  .  }
    40  .  .  .  .  .  1: *ast.ExprStmt {
    41  .  .  .  .  .  .  X: *ast.CallExpr {
    42  .  .  .  .  .  .  .  Fun: *ast.Ident {
    43  .  .  .  .  .  .  .  .  NamePos: 8:2
    44  .  .  .  .  .  .  .  .  Name: "println"
    45  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  Lparen: 8:9
    47  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    48  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    49  .  .  .  .  .  .  .  .  .  ValuePos: 8:10
    50  .  .  .  .  .  .  .  .  .  Kind: STRING
    51  .  .  .  .  .  .  .  .  .  Value: "\"1<2 \""
    52  .  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  .  Ellipsis: -
    55  .  .  .  .  .  .  .  Rparen: 8:16
    56  .  .  .  .  .  .  }
    57  .  .  .  .  .  }
    58  .  .  .  .  .  2: *ast.ExprStmt {
    59  .  .  .  .  .  .  X: *ast.CallExpr {
    60  .  .  .  .  .  .  .  Fun: *ast.Ident {
    61  .  .  .  .  .  .  .  .  NamePos: 9:2
    62  .  .  .  .  .  .  .  .  Name: "println"
    63  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  Lparen: 9:9
    65  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    66  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    67  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
    68  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:10
    69  .  .  .  .  .  .  .  .  .  .  Kind: INT
    70  .  .  .  .  .  .  .  .  .  .  Value: "1"
    71  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  OpPos: 9:11
    73  .  .  .  .  .  .  .  .  .  Op: <
    74  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    75  .  .  .  .  .  .  .  .  .  .  ValuePos: 9:12
    76  .  .  .  .  .  .  .  .  .  .  Kind: INT
    77  .  .  .  .  .  .  .  .  .  .  Value: "2"
    78  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  Ellipsis: -
    82  .  .  .  .  .  .  .  Rparen: 9:13
    83  .  .  .  .  .  .  }
    84  .  .  .  .  .  }
    85  .  .  .  .  .  3: *ast.ExprStmt {
    86  .  .  .  .  .  .  X: *ast.CallExpr {
    87  .  .  .  .  .  .  .  Fun: *ast.Ident {
    88  .  .  .  .  .  .  .  .  NamePos: 10:2
    89  .  .  .  .  .  .  .  .  Name: "println"
    90  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  Lparen: 10:9
    92  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    93  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    94  .  .  .  .  .  .  .  .  .  ValuePos: 10:10
    95  .  .  .  .  .  .  .  .  .  Kind: STRING
    96  .  .  .  .  .  .  .  .  .  Value: "\"1<=2 \""
    97  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  Ellipsis: -
   100  .  .  .  .  .  .  .  Rparen: 10:17
   101  .  .  .  .  .  .  }
   102  .  .  .  .  .  }
   103  .  .  .  .  .  4: *ast.ExprStmt {
   104  .  .  .  .  .  .  X: *ast.CallExpr {
   105  .  .  .  .  .  .  .  Fun: *ast.Ident {
   106  .  .  .  .  .  .  .  .  NamePos: 11:2
   107  .  .  .  .  .  .  .  .  Name: "println"
   108  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  .  Lparen: 11:9
   110  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   111  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   112  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   113  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:10
   114  .  .  .  .  .  .  .  .  .  .  Kind: INT
   115  .  .  .  .  .  .  .  .  .  .  Value: "1"
   116  .  .  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  .  .  OpPos: 11:11
   118  .  .  .  .  .  .  .  .  .  Op: <=
   119  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   120  .  .  .  .  .  .  .  .  .  .  ValuePos: 11:13
   121  .  .  .  .  .  .  .  .  .  .  Kind: INT
   122  .  .  .  .  .  .  .  .  .  .  Value: "2"
   123  .  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  .  }
   125  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  Ellipsis: -
   127  .  .  .  .  .  .  .  Rparen: 11:14
   128  .  .  .  .  .  .  }
   129  .  .  .  .  .  }
   130  .  .  .  .  .  5: *ast.ExprStmt {
   131  .  .  .  .  .  .  X: *ast.CallExpr {
   132  .  .  .  .  .  .  .  Fun: *ast.Ident {
   133  .  .  .  .  .  .  .  .  NamePos: 12:2
   134  .  .  .  .  .  .  .  .  Name: "println"
   135  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  Lparen: 12:9
   137  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   138  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   139  .  .  .  .  .  .  .  .  .  ValuePos: 12:10
   140  .  .  .  .  .  .  .  .  .  Kind: STRING
   141  .  .  .  .  .  .  .  .  .  Value: "\"2<=2 \""
   142  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  Ellipsis: -
   145  .  .  .  .  .  .  .  Rparen: 12:17
   146  .  .  .  .  .  .  }
   147  .  .  .  .  .  }
   148  .  .  .  .  .  6: *ast.ExprStmt {
   149  .  .  .  .  .  .  X: *ast.CallExpr {
   150  .  .  .  .  .  .  .  Fun: *ast.Ident {
   151  .  .  .  .  .  .  .  .  NamePos: 13:2
   152  .  .  .  .  .  .  .  .  Name: "println"
   153  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  Lparen: 13:9
   155  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   156  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   157  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   158  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:10
   159  .  .  .  .  .  .  .  .  .  .  Kind: INT
   160  .  .  .  .  .  .  .  .  .  .  Value: "2"
   161  .  .  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  .  .  OpPos: 13:11
   163  .  .  .  .  .  .  .  .  .  Op: <=
   164  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   165  .  .  .  .  .  .  .  .  .  .  ValuePos: 13:13
   166  .  .  .  .  .  .  .  .  .  .  Kind: INT
   167  .  .  .  .  .  .  .  .  .  .  Value: "2"
   168  .  .  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  Ellipsis: -
   172  .  .  .  .  .  .  .  Rparen: 13:14
   173  .  .  .  .  .  .  }
   174  .  .  .  .  .  }
   175  .  .  .  .  .  7: *ast.ExprStmt {
   176  .  .  .  .  .  .  X: *ast.CallExpr {
   177  .  .  .  .  .  .  .  Fun: *ast.Ident {
   178  .  .  .  .  .  .  .  .  NamePos: 14:2
   179  .  .  .  .  .  .  .  .  Name: "println"
   180  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  Lparen: 14:9
   182  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   183  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   184  .  .  .  .  .  .  .  .  .  ValuePos: 14:10
   185  .  .  .  .  .  .  .  .  .  Kind: STRING
   186  .  .  .  .  .  .  .  .  .  Value: "\"3>2 \""
   187  .  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  .  Ellipsis: -
   190  .  .  .  .  .  .  .  Rparen: 14:16
   191  .  .  .  .  .  .  }
   192  .  .  .  .  .  }
   193  .  .  .  .  .  8: *ast.ExprStmt {
   194  .  .  .  .  .  .  X: *ast.CallExpr {
   195  .  .  .  .  .  .  .  Fun: *ast.Ident {
   196  .  .  .  .  .  .  .  .  NamePos: 15:2
   197  .  .  .  .  .  .  .  .  Name: "println"
   198  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  Lparen: 15:9
   200  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   201  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   202  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   203  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:10
   204  .  .  .  .  .  .  .  .  .  .  Kind: INT
   205  .  .  .  .  .  .  .  .  .  .  Value: "3"
   206  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  .  OpPos: 15:11
   208  .  .  .  .  .  .  .  .  .  Op: >
   209  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   210  .  .  .  .  .  .  .  .  .  .  ValuePos: 15:12
   211  .  .  .  .  .  .  .  .  .  .  Kind: INT
   212  .  .  .  .  .  .  .  .  .  .  Value: "2"
   213  .  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  Ellipsis: -
   217  .  .  .  .  .  .  .  Rparen: 15:13
   218  .  .  .  .  .  .  }
   219  .  .  .  .  .  }
   220  .  .  .  .  .  9: *ast.ExprStmt {
   221  .  .  .  .  .  .  X: *ast.CallExpr {
   222  .  .  .  .  .  .  .  Fun: *ast.Ident {
   223  .  .  .  .  .  .  .  .  NamePos: 16:2
   224  .  .  .  .  .  .  .  .  Name: "println"
   225  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  Lparen: 16:9
   227  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   228  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   229  .  .  .  .  .  .  .  .  .  ValuePos: 16:10
   230  .  .  .  .  .  .  .  .  .  Kind: STRING
   231  .  .  .  .  .  .  .  .  .  Value: "\"3>=2 \""
   232  .  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  Ellipsis: -
   235  .  .  .  .  .  .  .  Rparen: 16:17
   236  .  .  .  .  .  .  }
   237  .  .  .  .  .  }
   238  .  .  .  .  .  10: *ast.ExprStmt {
   239  .  .  .  .  .  .  X: *ast.CallExpr {
   240  .  .  .  .  .  .  .  Fun: *ast.Ident {
   241  .  .  .  .  .  .  .  .  NamePos: 17:2
   242  .  .  .  .  .  .  .  .  Name: "println"
   243  .  .  .  .  .  .  .  }
   244  .  .  .  .  .  .  .  Lparen: 17:9
   245  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   246  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   247  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   248  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:10
   249  .  .  .  .  .  .  .  .  .  .  Kind: INT
   250  .  .  .  .  .  .  .  .  .  .  Value: "3"
   251  .  .  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  .  .  .  OpPos: 17:11
   253  .  .  .  .  .  .  .  .  .  Op: >=
   254  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   255  .  .  .  .  .  .  .  .  .  .  ValuePos: 17:13
   256  .  .  .  .  .  .  .  .  .  .  Kind: INT
   257  .  .  .  .  .  .  .  .  .  .  Value: "3"
   258  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  Ellipsis: -
   262  .  .  .  .  .  .  .  Rparen: 17:14
   263  .  .  .  .  .  .  }
   264  .  .  .  .  .  }
   265  .  .  .  .  .  11: *ast.ExprStmt {
   266  .  .  .  .  .  .  X: *ast.CallExpr {
   267  .  .  .  .  .  .  .  Fun: *ast.Ident {
   268  .  .  .  .  .  .  .  .  NamePos: 18:2
   269  .  .  .  .  .  .  .  .  Name: "println"
   270  .  .  .  .  .  .  .  }
   271  .  .  .  .  .  .  .  Lparen: 18:9
   272  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   273  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   274  .  .  .  .  .  .  .  .  .  ValuePos: 18:10
   275  .  .  .  .  .  .  .  .  .  Kind: STRING
   276  .  .  .  .  .  .  .  .  .  Value: "\"1==1 \""
   277  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  .  Ellipsis: -
   280  .  .  .  .  .  .  .  Rparen: 18:17
   281  .  .  .  .  .  .  }
   282  .  .  .  .  .  }
   283  .  .  .  .  .  12: *ast.ExprStmt {
   284  .  .  .  .  .  .  X: *ast.CallExpr {
   285  .  .  .  .  .  .  .  Fun: *ast.Ident {
   286  .  .  .  .  .  .  .  .  NamePos: 19:2
   287  .  .  .  .  .  .  .  .  Name: "println"
   288  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  Lparen: 19:9
   290  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   291  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   292  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   293  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:10
   294  .  .  .  .  .  .  .  .  .  .  Kind: INT
   295  .  .  .  .  .  .  .  .  .  .  Value: "1"
   296  .  .  .  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  .  .  .  OpPos: 19:11
   298  .  .  .  .  .  .  .  .  .  Op: ==
   299  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   300  .  .  .  .  .  .  .  .  .  .  ValuePos: 19:13
   301  .  .  .  .  .  .  .  .  .  .  Kind: INT
   302  .  .  .  .  .  .  .  .  .  .  Value: "1"
   303  .  .  .  .  .  .  .  .  .  }
   304  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  Ellipsis: -
   307  .  .  .  .  .  .  .  Rparen: 19:14
   308  .  .  .  .  .  .  }
   309  .  .  .  .  .  }
   310  .  .  .  .  .  13: *ast.ExprStmt {
   311  .  .  .  .  .  .  X: *ast.CallExpr {
   312  .  .  .  .  .  .  .  Fun: *ast.Ident {
   313  .  .  .  .  .  .  .  .  NamePos: 20:2
   314  .  .  .  .  .  .  .  .  Name: "println"
   315  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  Lparen: 20:9
   317  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   318  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   319  .  .  .  .  .  .  .  .  .  ValuePos: 20:10
   320  .  .  .  .  .  .  .  .  .  Kind: STRING
   321  .  .  .  .  .  .  .  .  .  Value: "\"False\""
   322  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  Ellipsis: -
   325  .  .  .  .  .  .  .  Rparen: 20:17
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  }
   328  .  .  .  .  .  14: *ast.ExprStmt {
   329  .  .  .  .  .  .  X: *ast.CallExpr {
   330  .  .  .  .  .  .  .  Fun: *ast.Ident {
   331  .  .  .  .  .  .  .  .  NamePos: 21:2
   332  .  .  .  .  .  .  .  .  Name: "println"
   333  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  Lparen: 21:9
   335  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   336  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   337  .  .  .  .  .  .  .  .  .  ValuePos: 21:10
   338  .  .  .  .  .  .  .  .  .  Kind: STRING
   339  .  .  .  .  .  .  .  .  .  Value: "\"2<2 \""
   340  .  .  .  .  .  .  .  .  }
   341  .  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  .  Ellipsis: -
   343  .  .  .  .  .  .  .  Rparen: 21:16
   344  .  .  .  .  .  .  }
   345  .  .  .  .  .  }
   346  .  .  .  .  .  15: *ast.ExprStmt {
   347  .  .  .  .  .  .  X: *ast.CallExpr {
   348  .  .  .  .  .  .  .  Fun: *ast.Ident {
   349  .  .  .  .  .  .  .  .  NamePos: 22:2
   350  .  .  .  .  .  .  .  .  Name: "println"
   351  .  .  .  .  .  .  .  }
   352  .  .  .  .  .  .  .  Lparen: 22:9
   353  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   354  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   355  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   356  .  .  .  .  .  .  .  .  .  .  ValuePos: 22:10
   357  .  .  .  .  .  .  .  .  .  .  Kind: INT
   358  .  .  .  .  .  .  .  .  .  .  Value: "2"
   359  .  .  .  .  .  .  .  .  .  }
   360  .  .  .  .  .  .  .  .  .  OpPos: 22:11
   361  .  .  .  .  .  .  .  .  .  Op: <
   362  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   363  .  .  .  .  .  .  .  .  .  .  ValuePos: 22:12
   364  .  .  .  .  .  .  .  .  .  .  Kind: INT
   365  .  .  .  .  .  .  .  .  .  .  Value: "2"
   366  .  .  .  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  Ellipsis: -
   370  .  .  .  .  .  .  .  Rparen: 22:13
   371  .  .  .  .  .  .  }
   372  .  .  .  .  .  }
   373  .  .  .  .  .  16: *ast.ExprStmt {
   374  .  .  .  .  .  .  X: *ast.CallExpr {
   375  .  .  .  .  .  .  .  Fun: *ast.Ident {
   376  .  .  .  .  .  .  .  .  NamePos: 23:2
   377  .  .  .  .  .  .  .  .  Name: "println"
   378  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  .  Lparen: 23:9
   380  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   381  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   382  .  .  .  .  .  .  .  .  .  ValuePos: 23:10
   383  .  .  .  .  .  .  .  .  .  Kind: STRING
   384  .  .  .  .  .  .  .  .  .  Value: "\"10<=2 \""
   385  .  .  .  .  .  .  .  .  }
   386  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  Ellipsis: -
   388  .  .  .  .  .  .  .  Rparen: 23:18
   389  .  .  .  .  .  .  }
   390  .  .  .  .  .  }
   391  .  .  .  .  .  17: *ast.ExprStmt {
   392  .  .  .  .  .  .  X: *ast.CallExpr {
   393  .  .  .  .  .  .  .  Fun: *ast.Ident {
   394  .  .  .  .  .  .  .  .  NamePos: 24:2
   395  .  .  .  .  .  .  .  .  Name: "println"
   396  .  .  .  .  .  .  .  }
   397  .  .  .  .  .  .  .  Lparen: 24:9
   398  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   399  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   400  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   401  .  .  .  .  .  .  .  .  .  .  ValuePos: 24:10
   402  .  .  .  .  .  .  .  .  .  .  Kind: INT
   403  .  .  .  .  .  .  .  .  .  .  Value: "10"
   404  .  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  .  .  OpPos: 24:12
   406  .  .  .  .  .  .  .  .  .  Op: <=
   407  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   408  .  .  .  .  .  .  .  .  .  .  ValuePos: 24:14
   409  .  .  .  .  .  .  .  .  .  .  Kind: INT
   410  .  .  .  .  .  .  .  .  .  .  Value: "2"
   411  .  .  .  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  .  .  }
   413  .  .  .  .  .  .  .  }
   414  .  .  .  .  .  .  .  Ellipsis: -
   415  .  .  .  .  .  .  .  Rparen: 24:15
   416  .  .  .  .  .  .  }
   417  .  .  .  .  .  }
   418  .  .  .  .  .  18: *ast.ExprStmt {
   419  .  .  .  .  .  .  X: *ast.CallExpr {
   420  .  .  .  .  .  .  .  Fun: *ast.Ident {
   421  .  .  .  .  .  .  .  .  NamePos: 25:2
   422  .  .  .  .  .  .  .  .  Name: "println"
   423  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  Lparen: 25:9
   425  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   426  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   427  .  .  .  .  .  .  .  .  .  ValuePos: 25:10
   428  .  .  .  .  .  .  .  .  .  Kind: STRING
   429  .  .  .  .  .  .  .  .  .  Value: "\"5<=2 \""
   430  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  .  Ellipsis: -
   433  .  .  .  .  .  .  .  Rparen: 25:17
   434  .  .  .  .  .  .  }
   435  .  .  .  .  .  }
   436  .  .  .  .  .  19: *ast.ExprStmt {
   437  .  .  .  .  .  .  X: *ast.CallExpr {
   438  .  .  .  .  .  .  .  Fun: *ast.Ident {
   439  .  .  .  .  .  .  .  .  NamePos: 26:2
   440  .  .  .  .  .  .  .  .  Name: "println"
   441  .  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  .  Lparen: 26:9
   443  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   444  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   445  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   446  .  .  .  .  .  .  .  .  .  .  ValuePos: 26:10
   447  .  .  .  .  .  .  .  .  .  .  Kind: INT
   448  .  .  .  .  .  .  .  .  .  .  Value: "5"
   449  .  .  .  .  .  .  .  .  .  }
   450  .  .  .  .  .  .  .  .  .  OpPos: 26:11
   451  .  .  .  .  .  .  .  .  .  Op: <=
   452  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   453  .  .  .  .  .  .  .  .  .  .  ValuePos: 26:13
   454  .  .  .  .  .  .  .  .  .  .  Kind: INT
   455  .  .  .  .  .  .  .  .  .  .  Value: "2"
   456  .  .  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  Ellipsis: -
   460  .  .  .  .  .  .  .  Rparen: 26:14
   461  .  .  .  .  .  .  }
   462  .  .  .  .  .  }
   463  .  .  .  .  .  20: *ast.ExprStmt {
   464  .  .  .  .  .  .  X: *ast.CallExpr {
   465  .  .  .  .  .  .  .  Fun: *ast.Ident {
   466  .  .  .  .  .  .  .  .  NamePos: 27:2
   467  .  .  .  .  .  .  .  .  Name: "println"
   468  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  Lparen: 27:9
   470  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   471  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   472  .  .  .  .  .  .  .  .  .  ValuePos: 27:10
   473  .  .  .  .  .  .  .  .  .  Kind: STRING
   474  .  .  .  .  .  .  .  .  .  Value: "\"1>2 \""
   475  .  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  }
   477  .  .  .  .  .  .  .  Ellipsis: -
   478  .  .  .  .  .  .  .  Rparen: 27:16
   479  .  .  .  .  .  .  }
   480  .  .  .  .  .  }
   481  .  .  .  .  .  21: *ast.ExprStmt {
   482  .  .  .  .  .  .  X: *ast.CallExpr {
   483  .  .  .  .  .  .  .  Fun: *ast.Ident {
   484  .  .  .  .  .  .  .  .  NamePos: 28:2
   485  .  .  .  .  .  .  .  .  Name: "println"
   486  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  Lparen: 28:9
   488  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   489  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   490  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   491  .  .  .  .  .  .  .  .  .  .  ValuePos: 28:10
   492  .  .  .  .  .  .  .  .  .  .  Kind: INT
   493  .  .  .  .  .  .  .  .  .  .  Value: "1"
   494  .  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  .  OpPos: 28:11
   496  .  .  .  .  .  .  .  .  .  Op: >
   497  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   498  .  .  .  .  .  .  .  .  .  .  ValuePos: 28:12
   499  .  .  .  .  .  .  .  .  .  .  Kind: INT
   500  .  .  .  .  .  .  .  .  .  .  Value: "2"
   501  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  .  Ellipsis: -
   505  .  .  .  .  .  .  .  Rparen: 28:13
   506  .  .  .  .  .  .  }
   507  .  .  .  .  .  }
   508  .  .  .  .  .  22: *ast.ExprStmt {
   509  .  .  .  .  .  .  X: *ast.CallExpr {
   510  .  .  .  .  .  .  .  Fun: *ast.Ident {
   511  .  .  .  .  .  .  .  .  NamePos: 29:2
   512  .  .  .  .  .  .  .  .  Name: "println"
   513  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  Lparen: 29:9
   515  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   516  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   517  .  .  .  .  .  .  .  .  .  ValuePos: 29:10
   518  .  .  .  .  .  .  .  .  .  Kind: STRING
   519  .  .  .  .  .  .  .  .  .  Value: "\"1>=3 \""
   520  .  .  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  .  Ellipsis: -
   523  .  .  .  .  .  .  .  Rparen: 29:17
   524  .  .  .  .  .  .  }
   525  .  .  .  .  .  }
   526  .  .  .  .  .  23: *ast.ExprStmt {
   527  .  .  .  .  .  .  X: *ast.CallExpr {
   528  .  .  .  .  .  .  .  Fun: *ast.Ident {
   529  .  .  .  .  .  .  .  .  NamePos: 30:2
   530  .  .  .  .  .  .  .  .  Name: "println"
   531  .  .  .  .  .  .  .  }
   532  .  .  .  .  .  .  .  Lparen: 30:9
   533  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   534  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   535  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   536  .  .  .  .  .  .  .  .  .  .  ValuePos: 30:10
   537  .  .  .  .  .  .  .  .  .  .  Kind: INT
   538  .  .  .  .  .  .  .  .  .  .  Value: "1"
   539  .  .  .  .  .  .  .  .  .  }
   540  .  .  .  .  .  .  .  .  .  OpPos: 30:11
   541  .  .  .  .  .  .  .  .  .  Op: >=
   542  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   543  .  .  .  .  .  .  .  .  .  .  ValuePos: 30:13
   544  .  .  .  .  .  .  .  .  .  .  Kind: INT
   545  .  .  .  .  .  .  .  .  .  .  Value: "3"
   546  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  .  }
   549  .  .  .  .  .  .  .  Ellipsis: -
   550  .  .  .  .  .  .  .  Rparen: 30:14
   551  .  .  .  .  .  .  }
   552  .  .  .  .  .  }
   553  .  .  .  .  .  24: *ast.ExprStmt {
   554  .  .  .  .  .  .  X: *ast.CallExpr {
   555  .  .  .  .  .  .  .  Fun: *ast.Ident {
   556  .  .  .  .  .  .  .  .  NamePos: 31:2
   557  .  .  .  .  .  .  .  .  Name: "println"
   558  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  .  Lparen: 31:9
   560  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   561  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   562  .  .  .  .  .  .  .  .  .  ValuePos: 31:10
   563  .  .  .  .  .  .  .  .  .  Kind: STRING
   564  .  .  .  .  .  .  .  .  .  Value: "\"1==2 \""
   565  .  .  .  .  .  .  .  .  }
   566  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  Ellipsis: -
   568  .  .  .  .  .  .  .  Rparen: 31:17
   569  .  .  .  .  .  .  }
   570  .  .  .  .  .  }
   571  .  .  .  .  .  25: *ast.ExprStmt {
   572  .  .  .  .  .  .  X: *ast.CallExpr {
   573  .  .  .  .  .  .  .  Fun: *ast.Ident {
   574  .  .  .  .  .  .  .  .  NamePos: 32:2
   575  .  .  .  .  .  .  .  .  Name: "println"
   576  .  .  .  .  .  .  .  }
   577  .  .  .  .  .  .  .  Lparen: 32:9
   578  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   579  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   580  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   581  .  .  .  .  .  .  .  .  .  .  ValuePos: 32:10
   582  .  .  .  .  .  .  .  .  .  .  Kind: INT
   583  .  .  .  .  .  .  .  .  .  .  Value: "1"
   584  .  .  .  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  .  .  .  OpPos: 32:11
   586  .  .  .  .  .  .  .  .  .  Op: ==
   587  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   588  .  .  .  .  .  .  .  .  .  .  ValuePos: 32:13
   589  .  .  .  .  .  .  .  .  .  .  Kind: INT
   590  .  .  .  .  .  .  .  .  .  .  Value: "2"
   591  .  .  .  .  .  .  .  .  .  }
   592  .  .  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  .  }
   594  .  .  .  .  .  .  .  Ellipsis: -
   595  .  .  .  .  .  .  .  Rparen: 32:14
   596  .  .  .  .  .  .  }
   597  .  .  .  .  .  }
   598  .  .  .  .  .  26: *ast.ExprStmt {
   599  .  .  .  .  .  .  X: *ast.CallExpr {
   600  .  .  .  .  .  .  .  Fun: *ast.Ident {
   601  .  .  .  .  .  .  .  .  NamePos: 33:2
   602  .  .  .  .  .  .  .  .  Name: "println"
   603  .  .  .  .  .  .  .  }
   604  .  .  .  .  .  .  .  Lparen: 33:9
   605  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   606  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   607  .  .  .  .  .  .  .  .  .  ValuePos: 33:10
   608  .  .  .  .  .  .  .  .  .  Kind: STRING
   609  .  .  .  .  .  .  .  .  .  Value: "\"Done\""
   610  .  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  .  }
   612  .  .  .  .  .  .  .  Ellipsis: -
   613  .  .  .  .  .  .  .  Rparen: 33:16
   614  .  .  .  .  .  .  }
   615  .  .  .  .  .  }
   616  .  .  .  .  }
   617  .  .  .  .  Rbrace: 35:1
   618  .  .  .  }
   619  .  .  }
   620  .  }
   621  .  Scope: *ast.Scope {
   622  .  .  Objects: map[string]*ast.Object (len = 1) {
   623  .  .  .  "main": *ast.Object {
   624  .  .  .  .  Kind: func
   625  .  .  .  .  Name: "main"
   626  .  .  .  .  Decl: *(obj @ 7)
   627  .  .  .  }
   628  .  .  }
   629  .  }
   630  .  Unresolved: []*ast.Ident (len = 27) {
   631  .  .  0: *(obj @ 24)
   632  .  .  1: *(obj @ 42)
   633  .  .  2: *(obj @ 60)
   634  .  .  3: *(obj @ 87)
   635  .  .  4: *(obj @ 105)
   636  .  .  5: *(obj @ 132)
   637  .  .  6: *(obj @ 150)
   638  .  .  7: *(obj @ 177)
   639  .  .  8: *(obj @ 195)
   640  .  .  9: *(obj @ 222)
   641  .  .  10: *(obj @ 240)
   642  .  .  11: *(obj @ 267)
   643  .  .  12: *(obj @ 285)
   644  .  .  13: *(obj @ 312)
   645  .  .  14: *(obj @ 330)
   646  .  .  15: *(obj @ 348)
   647  .  .  16: *(obj @ 375)
   648  .  .  17: *(obj @ 393)
   649  .  .  18: *(obj @ 420)
   650  .  .  19: *(obj @ 438)
   651  .  .  20: *(obj @ 465)
   652  .  .  21: *(obj @ 483)
   653  .  .  22: *(obj @ 510)
   654  .  .  23: *(obj @ 528)
   655  .  .  24: *(obj @ 555)
   656  .  .  25: *(obj @ 573)
   657  .  .  26: *(obj @ 600)
   658  .  }
   659  }
